# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/bios_6_42_00_08/packages/ti/sysbios/family/arm/cc26xx/Boot.c"






























 


 

# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/sys_ctrl.h"




































 






















# 1 "C:/ti/ccsv6/tools/compiler/arm_15.12.3.LTS/include/stdbool.h"




























 














# 61 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/sys_ctrl.h"
# 1 "C:/ti/ccsv6/tools/compiler/arm_15.12.3.LTS/include/stdint.h"
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 



 

    typedef   signed char   int8_t;
    typedef unsigned char  uint8_t;
    typedef          short  int16_t;
    typedef unsigned short uint16_t;
    typedef          int    int32_t;
    typedef unsigned int   uint32_t;


    typedef          long long  int64_t;
    typedef unsigned long long uint64_t;

 

    typedef  int8_t   int_least8_t;
    typedef uint8_t  uint_least8_t;

    typedef  int16_t  int_least16_t;
    typedef uint16_t uint_least16_t;
    typedef  int32_t  int_least32_t;
    typedef uint32_t uint_least32_t;


    typedef  int64_t  int_least64_t;
    typedef uint64_t uint_least64_t;

 

    typedef  int32_t  int_fast8_t;
    typedef uint32_t uint_fast8_t;
    typedef  int32_t  int_fast16_t;
    typedef uint32_t uint_fast16_t;

    typedef  int32_t  int_fast32_t;
    typedef uint32_t uint_fast32_t;


    typedef  int64_t  int_fast64_t;
    typedef uint64_t uint_fast64_t;

 
    typedef          int intptr_t;
    typedef unsigned int uintptr_t;

 
    typedef          long long intmax_t;
    typedef unsigned long long uintmax_t;





 


 






















# 125 "C:/ti/ccsv6/tools/compiler/arm_15.12.3.LTS/include/stdint.h"






# 137 "C:/ti/ccsv6/tools/compiler/arm_15.12.3.LTS/include/stdint.h"


















 









# 172 "C:/ti/ccsv6/tools/compiler/arm_15.12.3.LTS/include/stdint.h"








 







 

# 196 "C:/ti/ccsv6/tools/compiler/arm_15.12.3.LTS/include/stdint.h"





 






# 62 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/sys_ctrl.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_types.h"




































 




# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_chip_def.h"




































 




























 
# 156 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_chip_def.h"





# 181 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_chip_def.h"




















# 45 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_types.h"






typedef void (* FPTR_VOID_UINT8_T) (uint8_t);
















typedef unsigned int  __UINT32;



























# 114 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_types.h"



























# 63 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/sys_ctrl.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_memmap.h"


































 










# 154 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_memmap.h"

# 64 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/sys_ctrl.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_ints.h"


































 









# 54 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_ints.h"






# 91 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_ints.h"
                                            



















# 65 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/sys_ctrl.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_sysctl.h"


































 













# 66 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/sys_ctrl.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_prcm.h"


































 




































































































































































































# 238 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_prcm.h"
















# 260 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_prcm.h"
















# 282 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_prcm.h"




















































































































































































































































































































































# 628 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_prcm.h"




















# 654 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_prcm.h"




















# 680 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_prcm.h"

































































































































































































































# 911 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_prcm.h"









































# 963 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_prcm.h"




























































































































































































































































































































































































































































































































































# 1513 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_prcm.h"


















































# 1569 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_prcm.h"


# 67 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/sys_ctrl.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"


































 












                                            
# 80 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"
                                            
# 99 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"
                                            


                                            


                                            






















                                            











































# 205 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 235 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 274 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 304 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 343 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 373 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 412 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 442 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 481 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 511 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 525 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 539 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 553 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 567 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 581 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 595 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 609 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 623 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 637 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 651 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 665 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 679 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 693 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 707 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 721 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 759 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 772 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 793 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"
















                                            

                                            










# 828 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"














# 848 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"







# 870 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"







# 883 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"
                                            


                                            
# 893 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"
                                            

                                            
                                            

















































# 952 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"
                                            
# 963 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"






# 992 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"














# 1017 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_nvic.h"









# 68 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/sys_ctrl.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aon_wuc.h"


































 
























































































































# 166 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aon_wuc.h"















































# 220 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aon_wuc.h"






















































































































































































































































































































































































































































# 69 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/sys_ctrl.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aux_wuc.h"


































 














































































# 120 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aux_wuc.h"







# 133 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aux_wuc.h"










# 149 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aux_wuc.h"










# 165 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aux_wuc.h"







# 178 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aux_wuc.h"







# 191 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aux_wuc.h"







# 204 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aux_wuc.h"







# 217 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aux_wuc.h"





























































































































































































































































































































































































# 604 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aux_wuc.h"












# 622 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aux_wuc.h"







# 635 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aux_wuc.h"







# 648 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aux_wuc.h"







# 661 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aux_wuc.h"







# 674 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aux_wuc.h"







# 687 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aux_wuc.h"







# 700 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aux_wuc.h"


# 70 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/sys_ctrl.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aon_ioc.h"


































 













































































# 119 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aon_ioc.h"

















# 71 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/sys_ctrl.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_ddi_0_osc.h"


































 





































































# 111 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_ddi_0_osc.h"




















































































































































# 265 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_ddi_0_osc.h"








# 279 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_ddi_0_osc.h"







# 292 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_ddi_0_osc.h"




















































































# 382 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_ddi_0_osc.h"






















































































































































































































































# 634 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_ddi_0_osc.h"

































# 673 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_ddi_0_osc.h"







# 686 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_ddi_0_osc.h"


















































































































































# 849 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_ddi_0_osc.h"






























































































































































































































# 72 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/sys_ctrl.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_rfc_pwr.h"


































 





















































































































# 73 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/sys_ctrl.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_adi_3_refsys.h"


































 









































































# 120 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_adi_3_refsys.h"










































# 196 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_adi_3_refsys.h"







# 209 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_adi_3_refsys.h"


















































# 265 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_adi_3_refsys.h"




































































































































# 404 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_adi_3_refsys.h"
























































# 466 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_adi_3_refsys.h"








# 75 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/sys_ctrl.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aon_sysctl.h"


































 





















































































































































































































































































# 323 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aon_sysctl.h"
























# 76 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/sys_ctrl.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aon_rtc.h"


































 





























































# 103 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aon_rtc.h"




















# 139 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aon_rtc.h"








































































































































































































































































































































































# 77 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/sys_ctrl.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_fcfg1.h"


































 

































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































# 78 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/sys_ctrl.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/interrupt.h"




































 






















# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/debug.h"




































 










extern void __error__(char *pcFilename, uint32_t ui32Line);







# 67 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/debug.h"

# 66 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/interrupt.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/cpu.h"





































 









































# 87 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/cpu.h"

















extern uint32_t NOROM_CPUcpsid(void);













extern uint32_t NOROM_CPUprimask(void);











extern uint32_t NOROM_CPUcpsie(void);











# 174 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/cpu.h"
static inline void
CPUwfi(void)
{
    
    
    
    __asm("    wfi\n");
}












# 226 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/cpu.h"
static inline void
CPUwfe(void)
{
    
    
    
    __asm("    wfe\n");
}












# 278 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/cpu.h"
static inline void
CPUsev(void)
{
    
    
    
    __asm("    sev\n");
}















# 337 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/cpu.h"
static inline void
CPUbasepriSet(uint32_t ui32NewBasepri)
{
    
    
    
    __asm("    msr     BASEPRI, r0\n");
}












extern uint32_t NOROM_CPUbasepriGet(void);
















extern void NOROM_CPUdelay(uint32_t ui32Count);







# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/rom.h"




































 




























typedef uint32_t       (* FPTR_CRC32_T)                                                                     (uint8_t*  ,                                                   uint32_t   ,                                               uint32_t   );




typedef uint32_t       (* FPTR_GETFLSIZE_T)                                                                 (void);


typedef uint32_t       (* FPTR_GETCHIPID_T)                                                                 (void);


# 91 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/rom.h"
typedef uint32_t       (* FPTR_RESERVED1_T)                                                                 (uint32_t);


typedef uint32_t       (* FPTR_RESERVED2_T)                                                                (void);


typedef uint32_t       (* FPTR_RESERVED3_T)                                                                (uint8_t*,                                                               uint32_t,                                                               uint32_t);




typedef void                (* FPTR_RESETDEV_T)                                                                  (void);


typedef uint32_t       (* FPTR_FLETCHER32_T)                                                                (uint16_t*  ,                                                   uint16_t   ,                                               uint16_t   );




typedef uint32_t       (* FPTR_MINVAL_T)                                                                    (uint32_t*   ,                                             uint32_t    );



typedef uint32_t       (* FPTR_MAXVAL_T)                                                                    (uint32_t*   ,                                             uint32_t    );



typedef uint32_t       (* FPTR_MEANVAL_T)                                                                   (uint32_t*    ,                                             uint32_t     );



typedef uint32_t       (* FPTR_STDDVAL_T)                                                                   (uint32_t*    ,                                             uint32_t     );



typedef void                (* FPTR_HFSOURCESAFESWITCH_T)                                                        (void);


typedef void                (* FPTR_RESETPERIPHERAL_T)                                                           (uint32_t     );


typedef void                (* FPTR_RESETDOMAIN_T)                                                               (uint32_t     );


typedef void                (* FPTR_COMPAIN_T)                                                                     (uint8_t  );


typedef void                (* FPTR_COMPAREF_T)                                                                    (uint8_t  );


typedef void                (* FPTR_ADCCOMPBIN_T)                                                                  (uint8_t  );


typedef void                (* FPTR_COMPBREF_T)                                                                    (uint8_t  );



extern uint32_t MemBusWrkAroundHapiProgramFlash(uint8_t *pui8DataBuffer,
                                                uint32_t ui32Address,
                                                uint32_t ui32Count);

extern uint32_t MemBusWrkAroundHapiEraseSector(uint32_t ui32Address);





typedef struct
{
    FPTR_CRC32_T                    Crc32;



    FPTR_GETFLSIZE_T                FlashGetSize;

    FPTR_GETCHIPID_T                GetChipId;





    FPTR_RESERVED1_T                ReservedLocation1;
    FPTR_RESERVED2_T                ReservedLocation2;
    FPTR_RESERVED3_T                ReservedLocation3;

    FPTR_RESETDEV_T                 ResetDevice;
    FPTR_FLETCHER32_T               Fletcher32;
    FPTR_MINVAL_T                   MinValue;
    FPTR_MAXVAL_T                   MaxValue;
    FPTR_MEANVAL_T                  MeanValue;
    FPTR_STDDVAL_T                  StandDeviationValue;
    FPTR_RESETPERIPHERAL_T          ResetPeripheral;     
    FPTR_RESETDOMAIN_T              ResetDomain;         
    FPTR_HFSOURCESAFESWITCH_T       HFSourceSafeSwitch;
    FPTR_COMPAIN_T                  SelectCompAInput;
    FPTR_COMPAREF_T                 SelectCompARef;
    FPTR_ADCCOMPBIN_T               SelectADCCompBInput;
    FPTR_COMPBREF_T                 SelectCompBRef;
} HARD_API_T;









extern void SafeHapiAuxAdiSelect( FPTR_VOID_UINT8_T fPtr, uint8_t ut8Signal );

# 222 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/rom.h"
 

 
# 231 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/rom.h"





# 245 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/rom.h"





# 263 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/rom.h"





# 280 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/rom.h"

















# 325 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/rom.h"





































































































































































# 535 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/rom.h"









































































































































# 678 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/rom.h"

# 685 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/rom.h"

# 692 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/rom.h"












































































# 775 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/rom.h"





















































































































# 898 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/rom.h"
































# 384 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/cpu.h"
# 405 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/cpu.h"


















# 67 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/interrupt.h"
















# 96 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/interrupt.h"











# 116 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/interrupt.h"




















static inline _Bool
IntMasterEnable(void)
{
    
    
    
    return(NOROM_CPUcpsie());
}














static inline _Bool
IntMasterDisable(void)
{
    
    
    
    return(NOROM_CPUcpsid());
}


























extern void NOROM_IntRegister(uint32_t ui32Interrupt, void (*pfnHandler)(void));

















extern void NOROM_IntUnregister(uint32_t ui32Interrupt);

















extern void NOROM_IntPriorityGroupingSet(uint32_t ui32Bits);











extern uint32_t NOROM_IntPriorityGroupingGet(void);

































extern void NOROM_IntPrioritySet(uint32_t ui32Interrupt, uint8_t ui8Priority);





















extern int32_t NOROM_IntPriorityGet(uint32_t ui32Interrupt);














extern void NOROM_IntEnable(uint32_t ui32Interrupt);














extern void NOROM_IntDisable(uint32_t ui32Interrupt);


















extern void NOROM_IntPendSet(uint32_t ui32Interrupt);




















extern _Bool NOROM_IntPendGet(uint32_t ui32Interrupt);















extern void NOROM_IntPendClear(uint32_t ui32Interrupt);
























static inline void
IntPriorityMaskSet(uint32_t ui32PriorityMask)
{
    CPUbasepriSet(ui32PriorityMask);
}





















static inline uint32_t
IntPriorityMaskGet(void)
{
    return(NOROM_CPUbasepriGet());
}







# 492 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/interrupt.h"


















# 79 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/sys_ctrl.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/pwr_ctrl.h"




































 






















# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_adi_2_refsys.h"


































 










































































































# 148 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_adi_2_refsys.h"






































# 192 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_adi_2_refsys.h"






















# 220 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_adi_2_refsys.h"


# 69 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/pwr_ctrl.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/osc.h"




































 






















# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_ddi.h"


































 



















































































































































                                          
                                          
                                          

                                          
                                          
                                          

                                          
                                          
                                          








                                            








                                            
                                            
                                            
                                            
                                            
                                            



                                            










                                            
                                            
                                            



                                            
                                            




                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            











                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            







# 667 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_ddi.h"





# 680 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_ddi.h"






                                            


                                            











                                            


                                            


                                            


                                            







                                            


                                            


                                            


                                            







                                            


                                            


                                            


                                            







                                            


                                            


                                            


                                            







                                            


                                            


                                            


                                            







                                            


                                            


                                            


                                            







                                            


                                            


                                            


                                            







                                            


                                            


                                            


                                            







                                            


                                            


                                            


                                            







                                            


                                            


                                            


                                            







                                            


                                            


                                            


                                            







                                            


                                            


                                            


                                            







                                            


                                            


                                            


                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            







                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            







                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            







                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            







                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            









                                            
                                            




                                            
                                            









                                            
                                            




                                            
                                            









                                            
                                            




                                            
                                            









                                            
                                            




                                            
                                            









                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            


# 65 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/osc.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/aon_wuc.h"




































 






















# 69 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/aon_wuc.h"
















# 92 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/aon_wuc.h"







                                            

                                            

                                            






# 120 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/aon_wuc.h"






# 134 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/aon_wuc.h"







# 147 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/aon_wuc.h"
















# 177 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/aon_wuc.h"














                                            

                                            



                                            

                                            



























static inline void
AONWUCMcuPowerDownConfig(uint32_t ui32ClkSrc)
{
    uint32_t ui32Reg;

    
    
    
    ;


    
    
    
    ui32Reg = (*((volatile unsigned long *)(0x40091000 + 0x00000000)));
    ui32Reg &= ~0x00000003;
    (*((volatile unsigned long *)(0x40091000 + 0x00000000))) = ui32Reg |
                                             (ui32ClkSrc <<
                                              0);
}



















static inline void
AONWUCMcuPowerOffConfig(uint32_t ui32Mode)
{
    uint32_t ui32Reg;

    
    
    
    ;


    
    
    
    ui32Reg = (*((volatile unsigned long *)(0x40091000 + 0x00000008)));
    ui32Reg &= ~0x00020000;
    (*((volatile unsigned long *)(0x40091000 + 0x00000008))) = ui32Reg | ui32Mode;
}



















static inline void
AONWUCMcuWakeUpConfig(uint32_t ui32WakeUp)
{
    uint32_t ui32Reg;

    
    
    
    ;


    
    
    
    ui32Reg = (*((volatile unsigned long *)(0x40091000 + 0x00000008)));
    ui32Reg &= ~0x00010000;
    (*((volatile unsigned long *)(0x40091000 + 0x00000008))) = ui32Reg | ui32WakeUp;
}



























static inline void
AONWUCMcuSRamConfig(uint32_t ui32Retention)
{
    uint32_t ui32Reg;

    
    
    
    ;
    ;

    
    
    
    ui32Reg = (*((volatile unsigned long *)(0x40091000 + 0x00000008))) & ~0x0000000F;
    ui32Reg |= ui32Retention;
    (*((volatile unsigned long *)(0x40091000 + 0x00000008))) = ui32Reg;
}






















static inline uint32_t
AONWUCAuxClockConfigGet(void)
{
    
    
    
    return (((*((volatile unsigned long *)(0x40091000 + 0x00000004))) &
             0x00000700) >>
             8);
}



















static inline void
AONWUCAuxPowerDownConfig(uint32_t ui32ClkSrc)
{
    uint32_t ui32Reg;

    
    
    
    ;


    
    
    
    ui32Reg = (*((volatile unsigned long *)(0x40091000 + 0x00000004)));
    ui32Reg &= ~0x00001800;
    (*((volatile unsigned long *)(0x40091000 + 0x00000004))) = ui32Reg |
                                             (ui32ClkSrc <<
                                              11);
}





















extern void NOROM_AONWUCAuxSRamConfig(uint32_t ui32Retention);





























extern void NOROM_AONWUCAuxWakeupEvent(uint32_t ui32Mode);
















extern void NOROM_AONWUCAuxReset(void);











static inline void
AONWUCAuxImageValid(void)
{
    
    
    
    (*((volatile unsigned long *)(0x40091000 + 0x00000010))) |= 0x00000004;
}











static inline void
AONWUCAuxImageInvalid(void)
{
    
    
    
    (*((volatile unsigned long *)(0x40091000 + 0x00000010))) &= ~0x00000004;
}



















static inline uint32_t
AONWUCPowerStatusGet(void)
{
    
    
    
    return ((*((volatile unsigned long *)(0x40091000 + 0x00000014))));
}

















static inline void
AONWUCShutDownEnable(void)
{
    
    
    
    
    (*((volatile unsigned long *)(0x40091000 + 0x00000040))) = 0;

    
    
    
    (*((volatile unsigned long *)(0x40091000 + 0x00000020))) &= ~0x00000100;
    (*((volatile unsigned long *)(0x40091000 + 0x00000018))) = 0x00000001;
}













static inline void
AONWUCDomainPowerDownEnable(void)
{
    
    
    
    
    (*((volatile unsigned long *)(0x40091000 + 0x00000040))) = 0;

    
    
    
    (*((volatile unsigned long *)(0x40091000 + 0x00000020))) &= ~0x00000100;
}












static inline void
AONWUCDomainPowerDownDisable(void)
{
    
    
    
    (*((volatile unsigned long *)(0x40091000 + 0x00000020))) |= 0x00000100;
}























static inline void
AONWUCMcuResetClear(uint32_t ui32Status)
{
    
    
    
    ;


    
    
    
    (*((volatile unsigned long *)(0x40091000 + 0x00000024))) = ui32Status;
}










static inline uint32_t
AONWUCMcuResetStatusGet(void)
{
    
    
    
    return ((*((volatile unsigned long *)(0x40091000 + 0x00000024))));
}



















 














 



















extern void NOROM_AONWUCRechargeCtrlConfigSet(_Bool bAdaptEnable,
                                        uint32_t ui32AdaptRate,
                                        uint32_t ui32Period,
                                        uint32_t ui32MaxPeriod);










static inline uint32_t
AONWUCRechargeCtrlConfigGet(void)
{
    
    
    
    return((*((volatile unsigned long *)(0x40091000 + 0x00000030))));
}
















 


















extern void NOROM_AONWUCOscConfig(uint32_t ui32Period);
















static inline void
AONWUCJtagPowerOff(void)
{
    
    
    
    (*((volatile unsigned long *)(0x40091000 + 0x00000040))) = 0;
}








# 872 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/aon_wuc.h"


















# 67 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/osc.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/aux_wuc.h"




































 






















# 66 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/aux_wuc.h"
















# 88 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/aux_wuc.h"















# 112 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/aux_wuc.h"











































extern void NOROM_AUXWUCClockEnable(uint32_t ui32Clocks);


























extern void NOROM_AUXWUCClockDisable(uint32_t ui32Clocks);


























extern uint32_t NOROM_AUXWUCClockStatus(uint32_t ui32Clocks);





















static inline void
AUXWUCClockFreqReq(uint32_t ui32ClockFreq)
{
    
    
    
    ;


    
    
    
    (*((volatile unsigned long *)(0x400C6000 + 0x00000010))) = ui32ClockFreq;
}
















extern void NOROM_AUXWUCPowerCtrl(uint32_t ui32PowerMode);
















static inline void
AUXWUCFreezeEnable(void)
{
    
    
    
    (*((volatile unsigned long *)(0x400C6000 + 0x00000054))) = 0x0;
}

















static inline void
AUXWUCFreezeDisable(void)
{
    
    
    
    (*((volatile unsigned long *)(0x400C6000 + 0x00000054))) = 0x00000001;
}







# 337 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/aux_wuc.h"


















# 68 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/osc.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/ddi.h"




































 






















# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_aux_smph.h"


































 

















































































































































































































# 66 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/ddi.h"


















# 90 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/ddi.h"













































static inline void
AuxAdiDdiSafeWrite(uint32_t nAddr, uint32_t nData, uint32_t nSize)
{
    
    _Bool bIrqEnabled = !NOROM_CPUcpsid();
    
    while (!(*((volatile unsigned long *)(0x400C8000 + 0x00000000))));
    switch (nSize) {
    case 1:             (*((volatile unsigned char *)(nAddr))) = (uint8_t)nData; break;
    case 2:             (*((volatile unsigned short *)(nAddr))) = (uint16_t)nData; break;
    case 4: default:    (*((volatile unsigned long *)(nAddr)))  = nData; break;
    }
    (*((volatile unsigned long *)(0x400C8000 + 0x00000000))) = 1;
    
    if (bIrqEnabled) {
        NOROM_CPUcpsie();
    }
}














static inline uint32_t
AuxAdiDdiSafeRead(uint32_t nAddr, uint32_t nSize)
{
    uint32_t nRet;
    
    _Bool bIrqEnabled = !NOROM_CPUcpsid();
    
    while (!(*((volatile unsigned long *)(0x400C8000 + 0x00000000))));
    switch (nSize) {
    case 1:             nRet = (*((volatile unsigned char *)(nAddr))); break;
    case 2:             nRet = (*((volatile unsigned short *)(nAddr))); break;
    case 4: default:    nRet = (*((volatile unsigned long *)(nAddr))); break;
    }
    (*((volatile unsigned long *)(0x400C8000 + 0x00000000))) = 1;
    
    if (bIrqEnabled) {
        NOROM_CPUcpsie();
    }
    return nRet;
}

# 211 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/ddi.h"























static inline void
DDI32RegWrite(uint32_t ui32Base, uint32_t ui32Reg,
              uint32_t ui32Val)
{
    
    
    
    ;
    ;

    
    
    
    AuxAdiDdiSafeWrite(ui32Base + ui32Reg, ui32Val, 4);
}

















static inline uint32_t
DDI32RegRead(uint32_t ui32Base, uint32_t ui32Reg)
{
    
    
    
    ;
    ;

    
    
    
    return AuxAdiDdiSafeRead(ui32Base + ui32Reg, 4);
}























static inline void
DDI32BitsSet(uint32_t ui32Base, uint32_t ui32Reg, uint32_t ui32Val)
{
    uint32_t ui32RegOffset;

    
    
    
    ;
    ;

    
    
    
    
    ui32RegOffset = 0x00000040;

    
    
    
    AuxAdiDdiSafeWrite(ui32Base + ui32RegOffset + ui32Reg, ui32Val, 4);
}


















static inline void
DDI32BitsClear(uint32_t ui32Base, uint32_t ui32Reg,
               uint32_t ui32Val)
{
    uint32_t ui32RegOffset;

    
    
    
    ;
    ;

    
    
    
    
    ui32RegOffset = 0x00000080;

    
    
    
    AuxAdiDdiSafeWrite(ui32Base + ui32RegOffset + ui32Reg, ui32Val, 4);
}




























static inline void
DDI8SetValBit(uint32_t ui32Base, uint32_t ui32Reg, uint32_t ui32Byte,
              uint16_t ui16Mask, uint16_t ui16Val)
{
    uint32_t ui32RegOffset;

    
    
    
    ;
    ;
    ;
    ;

    
    
    
    
    ui32RegOffset = 0x00000180 + (ui32Reg << 1) + (ui32Byte << 1);

    
    
    
    AuxAdiDdiSafeWrite(ui32Base + ui32RegOffset, (ui16Mask << 8) | ui16Val, 2);
}




























static inline void
DDI16SetValBit(uint32_t ui32Base, uint32_t ui32Reg, _Bool bWriteHigh,
               uint32_t ui32Mask, uint32_t ui32Val)
{
    uint32_t ui32RegOffset;

    
    
    
    ;
    ;
    ;
    ;

    
    
    
    
    ui32RegOffset = 0x00000200 + (ui32Reg << 1) + (bWriteHigh ? 4 : 0);

    
    
    
    AuxAdiDdiSafeWrite(ui32Base + ui32RegOffset, (ui32Mask << 16) | ui32Val, 4);
}




















extern void NOROM_DDI16BitWrite(uint32_t ui32Base, uint32_t ui32Reg,
                          uint32_t ui32Mask, uint32_t ui32WrData);





















extern void NOROM_DDI16BitfieldWrite(uint32_t ui32Base, uint32_t ui32Reg,
                               uint32_t ui32Mask, uint32_t ui32Shift,
                               uint16_t ui32Data);















extern uint16_t NOROM_DDI16BitRead(uint32_t ui32Base, uint32_t ui32Reg,
                             uint32_t ui32Mask);



















extern uint16_t NOROM_DDI16BitfieldRead(uint32_t ui32Base, uint32_t ui32Reg,
                                  uint32_t ui32Mask, uint32_t ui32Shift);







# 582 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/ddi.h"


















# 70 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/osc.h"









































































static inline void
OSCXHfPowerModeSet(uint32_t ui32Mode)
{
    
    
    
    ;


    
    
    
    NOROM_DDI16BitWrite(0x400CA000, 0x00000000, 0x00000800,
                  ui32Mode);
}


































extern void NOROM_OSCClockSourceSet(uint32_t ui32SrcClk, uint32_t ui32Osc);






















extern uint32_t NOROM_OSCClockSourceGet(uint32_t ui32SrcClk);
















static inline _Bool
OSCHfSourceReady(void)
{
    
    
    
    return (NOROM_DDI16BitfieldRead(0x400CA000, 0x00000034,
                              0x00000001,
                              0)) ?
        1 : 0;
}



















static inline void
OSCHfSourceSwitch(void)
{
    
    
    
    ((HARD_API_T*) 0x10000048)->HFSourceSafeSwitch();
}















extern void NOROM_OSCInterfaceEnable(void);














static inline void
OSCInterfaceDisable(void)
{
    
    
    
    ((void (*)(uint32_t ui32Clocks))((uint32_t *)(((uint32_t *)0x10000180)[8]))[1])(0x00000040);

    
    
    
    ((void (*)(uint32_t ui32Mode))((uint32_t *)(((uint32_t *)0x10000180)[4]))[2])(0x00000000);
}















uint32_t OSCHF_GetStartupTime( uint32_t timeUntilWakeupInMs );












void OSCHF_TurnOnXosc( void );















_Bool OSCHF_AttemptToSwitchToXosc( void );












void OSCHF_SwitchToRcOscTurnOffXosc( void );








# 394 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/osc.h"



















# 72 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/pwr_ctrl.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/prcm.h"




































 






















# 71 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/prcm.h"
















# 103 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/prcm.h"















# 127 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/prcm.h"








                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            




                                            























# 195 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/prcm.h"







# 236 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/prcm.h"































extern void NOROM_PRCMInfClockConfigureSet(uint32_t ui32ClkDiv,
                                     uint32_t ui32PowerMode);






















extern uint32_t NOROM_PRCMInfClockConfigureGet(uint32_t ui32PowerMode);













static inline void
PRCMMcuPowerOff(void)
{
    
    
    
    (*((volatile unsigned long *)(0x40082000 + 0x0000000C))) |= 0x00000004;
}














static inline void
PRCMMcuPowerOffCancel(void)
{
    
    
    
    (*((volatile unsigned long *)(0x40082000 + 0x0000000C))) &= ~0x00000004;
}




















static inline void
PRCMMcuUldoConfigure(uint32_t ui32Enable)
{
    uint32_t ui32Val;

    
    
    
    ui32Val = (*((volatile unsigned long *)(0x40082000 + 0x0000000C)));
    if(ui32Enable)
    {
        ui32Val |= 0x00000001;
    }
    else
    {
        ui32Val &= ~0x00000001;
    }
    (*((volatile unsigned long *)(0x40082000 + 0x0000000C))) = ui32Val;
}
































static inline void
PRCMGPTimerClockDivisionSet( uint32_t clkDiv )
{
    ;

    (*((volatile unsigned long *)(0x40082000 + 0x000000CC))) = clkDiv;
}





















static inline uint32_t
PRCMGPTimerClockDivisionGet( void )
{
    return ( (*((volatile unsigned long *)(0x40082000 + 0x000000CC))));
}











static inline void
PRCMAudioClockEnable(void)
{
    
    
    
    (*((volatile unsigned long *)(0x40082000 + 0x000000D0))) |= 0x00000001;
}










static inline void
PRCMAudioClockDisable(void)
{
    
    
    
    (*((volatile unsigned long *)(0x40082000 + 0x000000D0))) &= ~0x00000001;
}
































extern void NOROM_PRCMAudioClockConfigSet(uint32_t ui32ClkConfig,
                                    uint32_t ui32SampleRate);


























extern void NOROM_PRCMAudioClockConfigSetOverride(uint32_t ui32ClkConfig, uint32_t ui32MstDiv,
                        uint32_t ui32BitDiv, uint32_t ui32WordDiv);




























static inline void
PRCMLoadSet(void)
{
    
    
    
    (*((volatile unsigned long *)(0x60082000 + 0x00000028))) = 0x00000001;
}












static inline _Bool
PRCMLoadGet(void)
{
    
    
    
    return (((*((volatile unsigned long *)(0x40082000 + 0x00000028))) & 0x00000002) ?
            1 : 0);
}





















static inline void
PRCMDomainEnable(uint32_t ui32Domains)
{
    
    
    
    ;


    
    
    
    if(ui32Domains & 0x00000001)
    {
        (*((volatile unsigned long *)(0x40082000 + 0x0000002C))) = 0x00000001;
    }
    if(ui32Domains & 0x00000010)
    {
        (*((volatile unsigned long *)(0x40082000 + 0x00000030))) = 0x00000003;
    }
}






















static inline void
PRCMDomainDisable(uint32_t ui32Domains)
{
    
    
    
    ;


    
    
    
    if(ui32Domains & 0x00000001)
    {
        (*((volatile unsigned long *)(0x40082000 + 0x0000002C))) = 0x0;
    }
    if(ui32Domains & 0x00000010)
    {
        (*((volatile unsigned long *)(0x40082000 + 0x00000030))) = 0x0;
    }
}



















































extern void NOROM_PRCMPowerDomainOn(uint32_t ui32Domains);
























extern void NOROM_PRCMPowerDomainOff(uint32_t ui32Domains);












static inline void
PRCMRfPowerDownWhenIdle(void)
{
    
    
    
    (*((volatile unsigned long *)(0x40082000 + 0x00000130))) &= ~0x00000001;
}












































extern void NOROM_PRCMPeripheralRunEnable(uint32_t ui32Peripheral);









































extern void NOROM_PRCMPeripheralRunDisable(uint32_t ui32Peripheral);







































extern void NOROM_PRCMPeripheralSleepEnable(uint32_t ui32Peripheral);








































extern void NOROM_PRCMPeripheralSleepDisable(uint32_t ui32Peripheral);







































extern void NOROM_PRCMPeripheralDeepSleepEnable(uint32_t ui32Peripheral);










































extern void NOROM_PRCMPeripheralDeepSleepDisable(uint32_t ui32Peripheral);




















extern uint32_t NOROM_PRCMPowerDomainStatus(uint32_t ui32Domains);














static inline _Bool
PRCMRfReady(void)
{
    
    
    
    return (((*((volatile unsigned long *)(0x40082000 + 0x0000019C))) &
             0x00000001) ? 1 : 0);
}

















static inline _Bool
PRCMWdtResetStatus(void)
{
    
    
    
    return (((*((volatile unsigned long *)(0x40082000 + 0x00000110))) & 0x00000001)
            ? 1 : 0);
}















static inline void
PRCMSleep(void)
{
    
    
    
    CPUwfi();
}















extern void NOROM_PRCMDeepSleep(void);










static inline void
PRCMCacheRetentionEnable( void )
{
   (*((volatile unsigned long *)(0x40082000 + 0x00000224))) |= 0x00000003;
}










static inline void
PRCMCacheRetentionDisable( void )
{
   (*((volatile unsigned long *)(0x40082000 + 0x00000224))) &= ~0x00000003;
}








# 1234 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/prcm.h"


















# 74 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/pwr_ctrl.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/aon_ioc.h"




































 






















# 66 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/aon_ioc.h"


























# 100 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/aon_ioc.h"




















































extern void NOROM_AONIOCDriveStrengthSet(uint32_t ui32LowDrvStr,
                                   uint32_t ui32MedDrvStr,
                                   uint32_t ui32MaxDrvStr);



























extern uint32_t NOROM_AONIOCDriveStrengthGet(uint32_t ui32DriveLevel);
















static inline void
AONIOCFreezeEnable(void)
{
    
    
    
    (*((volatile unsigned long *)(0x40094000 + 0x0000000C))) = 0x0;
}















static inline void
AONIOCFreezeDisable(void)
{
    
    
    
    (*((volatile unsigned long *)(0x40094000 + 0x0000000C))) = 0x00000001;
}














static inline void
AONIOC32kHzOutputDisable(void)
{
    
    
    
    (*((volatile unsigned long *)(0x40094000 + 0x00000010))) = 0x00000001;
}














static inline void
AONIOC32kHzOutputEnable(void)
{
    
    
    
    (*((volatile unsigned long *)(0x40094000 + 0x00000010))) = 0x0;
}







# 292 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/aon_ioc.h"


















# 76 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/pwr_ctrl.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/adi.h"




































 






















# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_uart.h"


































 






































































































































































































































































































































































# 400 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_uart.h"









# 415 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_uart.h"



















# 440 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_uart.h"









# 455 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_uart.h"

























# 486 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_uart.h"







# 499 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_uart.h"



















# 524 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_uart.h"









# 539 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_uart.h"









# 554 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_uart.h"







# 567 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_uart.h"

















# 591 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_uart.h"












# 610 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_uart.h"
















































































































































































































































































































































































































































# 64 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/adi.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_adi.h"


































 


























































































































                                          



                                          
                                          
                                          
                                          

                                          
                                          
                                          
                                          

                                          
                                          
                                          
                                          
















                                            
                                            
                                            
                                            
                                            
                                            



                                            









                                            
                                            
                                            





                                            
                                            
                                            






                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            











                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            

                                            


                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            

                                            
                                            






# 366 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_adi.h"





# 379 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_adi.h"






                                            


                                            











                                            


                                            


                                            


                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            







                                            
                                            


                                            
                                            


                                            
                                            


                                            
                                            








                                            
                                            
                                            
                                            
                                            
                                            



                                            









                                            
                                            
                                            





                                            
                                            
                                            






                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            







                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            







                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            







                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            







                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            








                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            


                                            


                                            
                                            
                                            









                                            
                                            




                                            
                                            









                                            
                                            




                                            
                                            









                                            
                                            




                                            
                                            









                                            
                                            




                                            
                                            









                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            




                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            










                                            
                                            
                                            


# 67 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/adi.h"















# 89 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/adi.h"
















# 126 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/adi.h"
















static inline uint32_t
ADIStatusGet(uint32_t ui32Base)
{
    
    
    
    ;

    
    
    
    return((*((volatile unsigned long *)(ui32Base + 0x00000030))));
}































static inline void
ADIConfigSet(uint32_t ui32Base, uint32_t ui32Config, _Bool bProtect)
{
    
    
    
    ;
    ;

    ;




    
    
    
    if (ui32Base==0x400CB000) {
        AuxAdiDdiSafeWrite(
            ui32Base + 0x00000038,
            (ui32Config & 0x7) | (bProtect ? 0x00000080 : 0),
            4
        );
    } else {
        (*((volatile unsigned long *)(ui32Base + 0x00000038))) = (ui32Config & 0x7) |
                                            (bProtect ? 0x00000080 : 0);
    }
}





















static inline void
ADISync(uint32_t ui32Base)
{
    
    
    
    ;

    
    
    
    if (ui32Base==0x400CB000) {
        AuxAdiDdiSafeWrite(ui32Base + 0x00000030, 0x00000000, 1);
    } else {
        (*((volatile unsigned char *)(ui32Base + 0x00000030))) = 0x00000000;
    }
}

























static inline void
ADIProtect(uint32_t ui32Base)
{
    uint32_t ui32Val;

    
    
    
    ;

    
    
    
    if (ui32Base==0x400CB000) {
        ui32Val = AuxAdiDdiSafeRead(ui32Base + 0x00000038, 4);
    } else {
        ui32Val = (*((volatile unsigned long *)(ui32Base + 0x00000038)));
    }
    ui32Val |= 0x00000080;
    if (ui32Base==0x400CB000) {
        AuxAdiDdiSafeWrite(ui32Base + 0x00000038, ui32Val, 4);
    } else {
        (*((volatile unsigned long *)(ui32Base + 0x00000038))) = ui32Val;
    }
}




























static inline void
ADI8RegWrite(uint32_t ui32Base, uint32_t ui32Reg, uint8_t ui8Val)
{
    
    
    
    ;
    ;

    
    
    
    if (ui32Base==0x400CB000) {
        AuxAdiDdiSafeWrite(ui32Base + ui32Reg, ui8Val, 1);
    } else {
        (*((volatile unsigned char *)(ui32Base + ui32Reg))) = ui8Val;
    }
}































static inline void
ADI16RegWrite(uint32_t ui32Base, uint32_t ui32Reg,
              uint16_t ui16Val)
{
    
    
    
    ;
    ;

    
    
    
    if (ui32Base==0x400CB000) {
        AuxAdiDdiSafeWrite(ui32Base + (ui32Reg & 0xFE), ui16Val, 2);
    } else {
        (*((volatile unsigned short *)(ui32Base + (ui32Reg & 0xFE)))) = ui16Val;
    }
}































static inline void
ADI32RegWrite(uint32_t ui32Base, uint32_t ui32Reg, uint32_t ui32Val)
{
    
    
    
    ;
    ;

    
    
    
    if (ui32Base==0x400CB000) {
        AuxAdiDdiSafeWrite(ui32Base + (ui32Reg & 0xFC), ui32Val, 4);
    } else {
        (*((volatile unsigned long *)(ui32Base + (ui32Reg & 0xFC)))) = ui32Val;
    }
}






















static inline uint32_t
ADI8RegRead(uint32_t ui32Base, uint32_t ui32Reg)
{
    
    
    
    ;
    ;

    
    
    
    if (ui32Base==0x400CB000) {
        return AuxAdiDdiSafeRead(ui32Base + ui32Reg, 1);
    } else {
        return((*((volatile unsigned char *)(ui32Base + ui32Reg))));
    }
}

























static inline uint32_t
ADI16RegRead(uint32_t ui32Base, uint32_t ui32Reg)
{
    
    
    
    ;
    ;

    
    
    
    if (ui32Base==0x400CB000) {
        return AuxAdiDdiSafeRead(ui32Base + (ui32Reg & 0xFE), 2);
    } else {
        return((*((volatile unsigned short *)(ui32Base + (ui32Reg & 0xFE)))));
    }
}























static inline uint32_t
ADI32RegRead(uint32_t ui32Base, uint32_t ui32Reg)
{
    
    
    
    ;
    ;

    
    
    
    if (ui32Base==0x400CB000) {
        return AuxAdiDdiSafeRead(ui32Base + (ui32Reg & 0xFC), 4);
    } else {
        return((*((volatile unsigned long *)(ui32Base + (ui32Reg & 0xFC)))));
    }
}































static inline void
ADI8BitsSet(uint32_t ui32Base, uint32_t ui32Reg, uint8_t ui8Val)
{
    uint32_t ui32RegOffset;

    
    
    
    ;
    ;

    
    
    
    
    ui32RegOffset = 0x00000010;

    
    
    
    if (ui32Base==0x400CB000) {
        AuxAdiDdiSafeWrite(ui32Base + ui32RegOffset + ui32Reg, ui8Val, 4);
    } else {
        (*((volatile unsigned char *)(ui32Base + ui32RegOffset + ui32Reg))) = ui8Val;
    }
}































static inline void
ADI16BitsSet(uint32_t ui32Base, uint32_t ui32Reg, uint16_t ui16Val)
{
    uint32_t ui32RegOffset;

    
    
    
    ;
    ;

    
    
    
    
    ui32RegOffset = 0x00000010;

    
    
    
    if (ui32Base==0x400CB000) {
        AuxAdiDdiSafeWrite(ui32Base + ui32RegOffset + (ui32Reg & 0xFE), ui16Val, 2);
    } else {
        (*((volatile unsigned short *)(ui32Base + ui32RegOffset + (ui32Reg & 0xFE)))) = ui16Val;
    }
}































static inline void
ADI32BitsSet(uint32_t ui32Base, uint32_t ui32Reg, uint32_t ui32Val)
{
    uint32_t ui32RegOffset;

    
    
    
    ;
    ;

    
    
    
    
    ui32RegOffset = 0x00000010;

    
    
    
    if (ui32Base==0x400CB000) {
        AuxAdiDdiSafeWrite(ui32Base + ui32RegOffset + (ui32Reg & 0xFC), ui32Val, 4);
    } else {
        (*((volatile unsigned long *)(ui32Base + ui32RegOffset + (ui32Reg & 0xFC)))) = ui32Val;
    }
}































static inline void
ADI8BitsClear(uint32_t ui32Base, uint32_t ui32Reg, uint8_t ui8Val)
{
    uint32_t ui32RegOffset;

    
    
    
    ;
    ;

    
    
    
    
    ui32RegOffset = 0x00000020;

    
    
    
    if (ui32Base==0x400CB000) {
        AuxAdiDdiSafeWrite(ui32Base + ui32RegOffset + ui32Reg, ui8Val, 1);
    } else {
        (*((volatile unsigned char *)(ui32Base + ui32RegOffset + ui32Reg))) = ui8Val;
    }
}































static inline void
ADI16BitsClear(uint32_t ui32Base, uint32_t ui32Reg, uint16_t ui16Val)
{
    uint32_t ui32RegOffset;

    
    
    
    ;
    ;

    
    
    
    
    ui32RegOffset = 0x00000020;

    
    
    
    if (ui32Base==0x400CB000) {
        AuxAdiDdiSafeWrite(ui32Base + ui32RegOffset + (ui32Reg & 0xFE), ui16Val, 2);
    } else {
        (*((volatile unsigned short *)(ui32Base + ui32RegOffset + (ui32Reg & 0xFE)))) = ui16Val;
    }
}































static inline void
ADI32BitsClear(uint32_t ui32Base, uint32_t ui32Reg, uint32_t ui32Val)
{
    uint32_t ui32RegOffset;

    
    
    
    ;
    ;

    
    
    
    
    ui32RegOffset = 0x00000020;

    
    
    
    if (ui32Base==0x400CB000) {
        AuxAdiDdiSafeWrite(ui32Base + ui32RegOffset + (ui32Reg & 0xFC), ui32Val, 4);
    } else {
        (*((volatile unsigned long *)(ui32Base + ui32RegOffset + (ui32Reg & 0xFC)))) = ui32Val;
    }
}


































static inline void
ADI4SetValBit(uint32_t ui32Base, uint32_t ui32Reg, _Bool bWriteHigh,
              uint8_t ui8Mask, uint8_t ui8Val)
{
    uint32_t ui32RegOffset;

    
    
    
    ;
    ;
    ;
    ;

    
    
    
    
    ui32RegOffset = 0x00000040 + (ui32Reg << 1) + (bWriteHigh ? 1 : 0);

    
    
    
    if (ui32Base==0x400CB000) {
        AuxAdiDdiSafeWrite(ui32Base + ui32RegOffset, (ui8Mask << 4) | ui8Val, 1);
    } else {
        (*((volatile unsigned char *)(ui32Base + ui32RegOffset))) = (ui8Mask << 4) | ui8Val;
    }
}





























static inline void
ADI8SetValBit(uint32_t ui32Base, uint32_t ui32Reg, uint16_t ui16Mask,
              uint16_t ui16Val)
{
    uint32_t ui32RegOffset;

    
    
    
    ;
    ;
    ;
    ;

    
    
    
    
    ui32RegOffset = 0x00000060 + (ui32Reg << 1);

    
    
    
    if (ui32Base==0x400CB000) {
        AuxAdiDdiSafeWrite(ui32Base + ui32RegOffset, (ui16Mask << 8) | ui16Val, 2);
    } else {
        (*((volatile unsigned short *)(ui32Base + ui32RegOffset))) = (ui16Mask << 8) | ui16Val;
    }
}






























static inline void
ADI16SetValBit(uint32_t ui32Base, uint32_t ui32Reg, uint32_t ui32Mask,
               uint32_t ui32Val)
{
    uint32_t ui32RegOffset;

    
    
    
    ;
    ;
    ;
    ;

    
    
    
    
    ui32RegOffset = 0x00000080 + ((ui32Reg << 1) & 0xFC);

    
    
    
    if (ui32Base==0x400CB000) {
        AuxAdiDdiSafeWrite(ui32Base + ui32RegOffset, (ui32Mask << 16) | ui32Val, 4);
    } else {
        (*((volatile unsigned long *)(ui32Base + ui32RegOffset))) = (ui32Mask << 16) | ui32Val;
    }
}


















# 78 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/pwr_ctrl.h"




































# 121 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/pwr_ctrl.h"






# 135 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/pwr_ctrl.h"





































extern void NOROM_PowerCtrlStateSet(uint32_t ui32Powerstate);























extern void NOROM_PowerCtrlSourceSet(uint32_t ui32PowerConfig);

















static inline uint32_t
PowerCtrlSourceGet(void)
{
    uint32_t ui32PowerConfig;

    
    
    
    ui32PowerConfig = (*((volatile unsigned long *)(0x40090000 + 0x00000000)));
    if(ui32PowerConfig & 0x00000004)
    {
        return (0x00000001);
    }
    else
    {
        return (0x00000000);
    }
}


















static inline uint32_t
PowerCtrlResetSourceGet(void)
{
    
    
    
    return ((*((volatile unsigned long *)(0x40090000 + 0x00000004))) &
            0x0000000E);
}














static inline void
PowerCtrlIOFreezeEnable(void)
{
    
    
    
    AONIOCFreezeEnable();
    (*((volatile unsigned long *)(0x40090000 + 0x00000008))) = 0;
    (*((volatile unsigned long *)(0x40092000 + 0x0000002C)));
}















static inline void
PowerCtrlIOFreezeDisable(void)
{
    
    
    
    AONIOCFreezeDisable();
    (*((volatile unsigned long *)(0x40090000 + 0x00000008))) = 1;
    (*((volatile unsigned long *)(0x40092000 + 0x0000002C)));
}







# 326 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/pwr_ctrl.h"


















# 81 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/sys_ctrl.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/vims.h"




































 






















# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_vims.h"


































 






































































# 112 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_vims.h"




















































































# 202 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/inc/hw_vims.h"


# 65 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/vims.h"

















# 88 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/vims.h"








                                     



                                     








# 128 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/vims.h"
























extern void NOROM_VIMSConfigure(uint32_t ui32Base, _Bool bRoundRobin,
                          _Bool bPrefetch);




























































extern void NOROM_VIMSModeSet(uint32_t ui32Base, uint32_t ui32Mode);



















extern uint32_t NOROM_VIMSModeGet(uint32_t ui32Base);



























































extern void NOROM_VIMSModeSetBlocking( uint32_t ui32Mode );













static inline void
VIMSLineBufDisable(uint32_t ui32Base)
{
    
    
    
    (*((volatile unsigned long *)(ui32Base + 0x00000004))) |= 0x00000020 |
                                        0x00000010;
}













static inline void
VIMSLineBufEnable(uint32_t ui32Base)
{
    
    
    
    (*((volatile unsigned long *)(ui32Base + 0x00000004))) &= ~(0x00000020 |
                                          0x00000010);
}







# 365 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/vims.h"


















# 89 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/sys_ctrl.h"
















# 112 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/sys_ctrl.h"






































extern void NOROM_SysCtrlPowerEverything(void);













extern void NOROM_SysCtrlStandby(void);













extern void NOROM_SysCtrlPowerdown(void);


















extern void NOROM_SysCtrlShutdown(void);













static inline uint32_t
SysCtrlClockGet( void )
{
    
    
    
    return( 48000000 );
}












static inline void
SysCtrlAonSync(void)
{
    
    
    
    (*((volatile unsigned long *)(0x40092000 + 0x0000002C)));
}

















static inline void
SysCtrlAonUpdate(void)
{
    
    
    
    
    (*((volatile unsigned long *)(0x40092000 + 0x0000002C))) = 1;
    (*((volatile unsigned long *)(0x40092000 + 0x0000002C)));
}












typedef enum {
   XoscInHighPowerMode = 0, 
   XoscInLowPowerMode       
} XoscPowerMode_t;






















void
SysCtrlSetRechargeBeforePowerDown( XoscPowerMode_t xoscPowerMode );























void
SysCtrlAdjustRechargeAfterPowerDown( void );

















void
SysCtrl_DCDC_VoltageConditionalControl( void );






# 365 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/sys_ctrl.h"









extern uint32_t NOROM_SysCtrlResetSourceGet( void );








static inline void
SysCtrlSystemReset( void )
{
   
   NOROM_CPUcpsid();
   
   (*((volatile unsigned long *)(((unsigned long)(0x40090000 + 0x00000004) & 0xF0000000) | 0x02000000 | (((unsigned long)(0x40090000 + 0x00000004) & 0x000FFFFF) << 5) | ((31) << 2)))) = 1;
   
   while ( 1 ) {
      
   }
}








# 426 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/cc26xxware_2_21_01_15600/driverlib/sys_ctrl.h"


















# 37 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/bios_6_42_00_08/packages/ti/sysbios/family/arm/cc26xx/Boot.c"

# 1 "C:\\ti\\tirex-content\\tirtos_simplelink_2_13_00_06\\products\\bios_6_42_00_08\\packages\\ti\\sysbios\\family\\arm\\cc26xx\\package/internal/Boot.xdc.h"





 








# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/bios_6_42_00_08/packages/ti/sysbios/family/arm/cc26xx/Boot.h"





 















 




 




















 

# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/std.h"











 




# 1 "C:/ti/ccsv6/tools/compiler/arm_15.12.3.LTS/include/stdarg.h"
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 




#pragma diag_push
#pragma CHECK_MISRA("-19.7")  
#pragma CHECK_MISRA("-19.10")  
#pragma CHECK_MISRA("-20.1")  
#pragma CHECK_MISRA("-20.2")  

# 53 "C:/ti/ccsv6/tools/compiler/arm_15.12.3.LTS/include/stdarg.h"


typedef struct __va_list {
    void * __ap;
} va_list;












# 82 "C:/ti/ccsv6/tools/compiler/arm_15.12.3.LTS/include/stdarg.h"

# 111 "C:/ti/ccsv6/tools/compiler/arm_15.12.3.LTS/include/stdarg.h"



#pragma diag_pop



#pragma diag_push


 
 
#pragma CHECK_MISRA("-19.15")





#pragma diag_pop
# 18 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/std.h"
# 1 "C:/ti/ccsv6/tools/compiler/arm_15.12.3.LTS/include/stddef.h"
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 




#pragma diag_push
#pragma CHECK_MISRA("-19.7")  
#pragma CHECK_MISRA("-20.1")  
#pragma CHECK_MISRA("-20.2")  









typedef int ptrdiff_t;



typedef unsigned size_t;






typedef unsigned short wchar_t;




#pragma diag_push
#pragma CHECK_MISRA("-19.10")  

# 84 "C:/ti/ccsv6/tools/compiler/arm_15.12.3.LTS/include/stddef.h"





#pragma diag_pop









#pragma diag_push
#pragma CHECK_MISRA("-19.15")  

 
 
 
 
 
 
 
# 130 "C:/ti/ccsv6/tools/compiler/arm_15.12.3.LTS/include/stddef.h"

#pragma diag_pop
# 19 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/std.h"

 




 



typedef char            xdc_Char;
typedef unsigned char   xdc_UChar;
typedef short           xdc_Short;
typedef unsigned short  xdc_UShort;
typedef int             xdc_Int;
typedef unsigned int    xdc_UInt;
typedef long            xdc_Long;
typedef unsigned long   xdc_ULong;
typedef float           xdc_Float;
typedef double          xdc_Double;
typedef long double     xdc_LDouble;
typedef size_t          xdc_SizeT;
typedef va_list         xdc_VaList;

 

typedef unsigned short  xdc_Bool;        
typedef void            *xdc_Ptr;        
typedef const void      *xdc_CPtr;       
typedef char            *xdc_String;     
typedef const char      *xdc_CString;    









 
# 70 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/std.h"
  typedef int             (*xdc_Fxn)();    




 
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/bios_6_42_00_08/packages/ti/targets/arm/elf/std.h"










 



 










 
# 1 "C:\\ti\\tirex-content\\tirtos_simplelink_2_13_00_06\\products\\bios_6_42_00_08\\packages\\ti\\targets\\arm\\elf\\M3.h"







 







 








 






 






 






 






 






 








 
# 86 "C:\\ti\\tirex-content\\tirtos_simplelink_2_13_00_06\\products\\bios_6_42_00_08\\packages\\ti\\targets\\arm\\elf\\M3.h"






 
# 109 "C:\\ti\\tirex-content\\tirtos_simplelink_2_13_00_06\\products\\bios_6_42_00_08\\packages\\ti\\targets\\arm\\elf\\M3.h"






 


# 29 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/bios_6_42_00_08/packages/ti/targets/arm/elf/std.h"


 
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/bios_6_42_00_08/packages/ti/targets/std.h"










 




 




 




 






# 42 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/bios_6_42_00_08/packages/ti/targets/std.h"




 
# 73 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/bios_6_42_00_08/packages/ti/targets/std.h"

# 92 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/bios_6_42_00_08/packages/ti/targets/std.h"



 
typedef int_least8_t    xdc_Int8;
typedef uint_least8_t   xdc_UInt8;
typedef int_least16_t   xdc_Int16;
typedef uint_least16_t  xdc_UInt16;
typedef int_least32_t   xdc_Int32;
typedef uint_least32_t  xdc_UInt32;


    typedef int_least64_t   xdc_Int64;
    typedef uint_least64_t   xdc_UInt64;


# 120 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/bios_6_42_00_08/packages/ti/targets/std.h"



 

    typedef uint8_t     xdc_Bits8;


    typedef uint16_t    xdc_Bits16;


    typedef uint32_t    xdc_Bits32;


    typedef uint64_t    xdc_Bits64;




 
typedef intptr_t        xdc_IArg;
typedef uintptr_t       xdc_UArg;



 





 




 








 




# 181 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/bios_6_42_00_08/packages/ti/targets/std.h"





 

# 33 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/bios_6_42_00_08/packages/ti/targets/arm/elf/std.h"





 

# 81 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/std.h"
# 113 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/std.h"










 




 


typedef long long               xdc_LLong;
typedef unsigned long long      xdc_ULLong;

# 147 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/std.h"






 

static inline xdc_Ptr xdc_iargToPtr(xdc_IArg a) { return ((xdc_Ptr)a); }
static inline xdc_Ptr xdc_uargToPtr(xdc_UArg a) { return ((xdc_Ptr)a); }



static inline xdc_Fxn xdc_iargToFxn(xdc_IArg a) { return ((xdc_Fxn)a); }
static inline xdc_Fxn xdc_uargToFxn(xdc_UArg a) { return ((xdc_Fxn)a); }








 
typedef union {
    xdc_Float f;
    xdc_IArg  a;
} xdc_FloatData;

static inline xdc_IArg xdc_floatToArg(xdc_Float f)
{
     xdc_FloatData u;
     u.f = f;

     return (u.a);
}

static inline xdc_Float xdc_argToFloat(xdc_IArg a)
{
     xdc_FloatData u;
     u.a = a;

     return (u.f);
}


 




 



# 208 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/std.h"



typedef xdc_Char        Char;
typedef xdc_UChar       UChar;
typedef xdc_Short       Short;
typedef xdc_UShort      UShort;
typedef xdc_Int         Int;
typedef xdc_UInt        UInt;
typedef xdc_Long        Long;
typedef xdc_ULong       ULong;
typedef xdc_LLong       LLong;
typedef xdc_ULLong      ULLong;
typedef xdc_Float       Float;
typedef xdc_Double      Double;
typedef xdc_LDouble     LDouble;
typedef xdc_SizeT       SizeT;
typedef xdc_VaList      VaList;

typedef xdc_IArg        IArg;
typedef xdc_UArg        UArg;
typedef xdc_Bool        Bool;
typedef xdc_Int8        Int8;
typedef xdc_Int16       Int16;
typedef xdc_Int32       Int32;
typedef xdc_Fxn         Fxn;
typedef xdc_Ptr         Ptr;

typedef xdc_String      String;

typedef xdc_CString     CString;

typedef xdc_UInt8       UInt8;
typedef xdc_UInt16      UInt16;
typedef xdc_UInt32      UInt32;

 



 




typedef xdc_UInt8       Uint8;
typedef xdc_UInt16      Uint16;
typedef xdc_UInt32      Uint32;
typedef xdc_UInt        Uns;





 

typedef xdc_Int64       Int64;
typedef xdc_UInt64      UInt64;





 

typedef xdc_Bits8       Bits8;



typedef xdc_Bits16      Bits16;



typedef xdc_Bits32      Bits32;



typedef xdc_Bits64      Bits64;




 






 
# 304 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/std.h"







 

















  

















 







 

# 51 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/bios_6_42_00_08/packages/ti/sysbios/family/arm/cc26xx/Boot.h"

# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/xdc.h"











 



 







 






 





























 
# 69 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/xdc.h"




 















 

# 53 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/bios_6_42_00_08/packages/ti/sysbios/family/arm/cc26xx/Boot.h"
# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"





 















 




 




















 



# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types__prologue.h"











 



 


 

# 54 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"
# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/package/package.defs.h"





 







 

typedef struct xdc_runtime_IModule_Fxns__ xdc_runtime_IModule_Fxns__;
typedef const xdc_runtime_IModule_Fxns__* xdc_runtime_IModule_Module;



 




 

typedef struct xdc_runtime_Core_ObjDesc xdc_runtime_Core_ObjDesc;



 




 

typedef struct xdc_runtime_Diags_DictElem xdc_runtime_Diags_DictElem;



 

typedef struct xdc_runtime_Error_Data xdc_runtime_Error_Data;
typedef struct xdc_runtime_Error_Block xdc_runtime_Error_Block;
typedef struct xdc_runtime_Error_Module_State xdc_runtime_Error_Module_State;



 




 

typedef struct xdc_runtime_IGateProvider_Fxns__ xdc_runtime_IGateProvider_Fxns__;
typedef const xdc_runtime_IGateProvider_Fxns__* xdc_runtime_IGateProvider_Module;
typedef struct xdc_runtime_IGateProvider_Params xdc_runtime_IGateProvider_Params;
typedef struct xdc_runtime_IGateProvider___Object { xdc_runtime_IGateProvider_Fxns__* __fxns; xdc_Bits32 __label; } *xdc_runtime_IGateProvider_Handle;



 

typedef struct xdc_runtime_GateNull_Fxns__ xdc_runtime_GateNull_Fxns__;
typedef const xdc_runtime_GateNull_Fxns__* xdc_runtime_GateNull_Module;
typedef struct xdc_runtime_GateNull_Params xdc_runtime_GateNull_Params;
typedef struct xdc_runtime_GateNull_Object xdc_runtime_GateNull_Object;
typedef struct xdc_runtime_GateNull_Struct xdc_runtime_GateNull_Struct;
typedef xdc_runtime_GateNull_Object* xdc_runtime_GateNull_Handle;
typedef struct xdc_runtime_GateNull_Object__ xdc_runtime_GateNull_Instance_State;
typedef xdc_runtime_GateNull_Object* xdc_runtime_GateNull_Instance;



 

typedef struct xdc_runtime_Log_EventRec xdc_runtime_Log_EventRec;



 

typedef struct xdc_runtime_ILogger_Fxns__ xdc_runtime_ILogger_Fxns__;
typedef const xdc_runtime_ILogger_Fxns__* xdc_runtime_ILogger_Module;
typedef struct xdc_runtime_ILogger_Params xdc_runtime_ILogger_Params;
typedef struct xdc_runtime_ILogger___Object { xdc_runtime_ILogger_Fxns__* __fxns; xdc_Bits32 __label; } *xdc_runtime_ILogger_Handle;



 

typedef struct xdc_runtime_IFilterLogger_Fxns__ xdc_runtime_IFilterLogger_Fxns__;
typedef const xdc_runtime_IFilterLogger_Fxns__* xdc_runtime_IFilterLogger_Module;
typedef struct xdc_runtime_IFilterLogger_Params xdc_runtime_IFilterLogger_Params;
typedef struct xdc_runtime_IFilterLogger___Object { xdc_runtime_IFilterLogger_Fxns__* __fxns; xdc_Bits32 __label; } *xdc_runtime_IFilterLogger_Handle;



 

typedef struct xdc_runtime_LoggerBuf_Entry xdc_runtime_LoggerBuf_Entry;
typedef struct xdc_runtime_LoggerBuf_Module_State xdc_runtime_LoggerBuf_Module_State;
typedef struct xdc_runtime_LoggerBuf_Fxns__ xdc_runtime_LoggerBuf_Fxns__;
typedef const xdc_runtime_LoggerBuf_Fxns__* xdc_runtime_LoggerBuf_Module;
typedef struct xdc_runtime_LoggerBuf_Params xdc_runtime_LoggerBuf_Params;
typedef struct xdc_runtime_LoggerBuf_Object xdc_runtime_LoggerBuf_Object;
typedef struct xdc_runtime_LoggerBuf_Struct xdc_runtime_LoggerBuf_Struct;
typedef xdc_runtime_LoggerBuf_Object* xdc_runtime_LoggerBuf_Handle;
typedef struct xdc_runtime_LoggerBuf_Object__ xdc_runtime_LoggerBuf_Instance_State;
typedef xdc_runtime_LoggerBuf_Object* xdc_runtime_LoggerBuf_Instance;



 

typedef struct xdc_runtime_LoggerCallback_Fxns__ xdc_runtime_LoggerCallback_Fxns__;
typedef const xdc_runtime_LoggerCallback_Fxns__* xdc_runtime_LoggerCallback_Module;
typedef struct xdc_runtime_LoggerCallback_Params xdc_runtime_LoggerCallback_Params;
typedef struct xdc_runtime_LoggerCallback_Object xdc_runtime_LoggerCallback_Object;
typedef struct xdc_runtime_LoggerCallback_Struct xdc_runtime_LoggerCallback_Struct;
typedef xdc_runtime_LoggerCallback_Object* xdc_runtime_LoggerCallback_Handle;
typedef struct xdc_runtime_LoggerCallback_Object__ xdc_runtime_LoggerCallback_Instance_State;
typedef xdc_runtime_LoggerCallback_Object* xdc_runtime_LoggerCallback_Instance;



 

typedef struct xdc_runtime_LoggerSys_Fxns__ xdc_runtime_LoggerSys_Fxns__;
typedef const xdc_runtime_LoggerSys_Fxns__* xdc_runtime_LoggerSys_Module;
typedef struct xdc_runtime_LoggerSys_Params xdc_runtime_LoggerSys_Params;
typedef struct xdc_runtime_LoggerSys_Object xdc_runtime_LoggerSys_Object;
typedef struct xdc_runtime_LoggerSys_Struct xdc_runtime_LoggerSys_Struct;
typedef xdc_runtime_LoggerSys_Object* xdc_runtime_LoggerSys_Handle;
typedef struct xdc_runtime_LoggerSys_Object__ xdc_runtime_LoggerSys_Instance_State;
typedef xdc_runtime_LoggerSys_Object* xdc_runtime_LoggerSys_Instance;



 




 

typedef struct xdc_runtime_Memory_Stats xdc_runtime_Memory_Stats;
typedef struct xdc_runtime_Memory_Module_State xdc_runtime_Memory_Module_State;



 

typedef struct xdc_runtime_IHeap_Fxns__ xdc_runtime_IHeap_Fxns__;
typedef const xdc_runtime_IHeap_Fxns__* xdc_runtime_IHeap_Module;
typedef struct xdc_runtime_IHeap_Params xdc_runtime_IHeap_Params;
typedef struct xdc_runtime_IHeap___Object { xdc_runtime_IHeap_Fxns__* __fxns; xdc_Bits32 __label; } *xdc_runtime_IHeap_Handle;



 

typedef struct xdc_runtime_HeapMin_Fxns__ xdc_runtime_HeapMin_Fxns__;
typedef const xdc_runtime_HeapMin_Fxns__* xdc_runtime_HeapMin_Module;
typedef struct xdc_runtime_HeapMin_Params xdc_runtime_HeapMin_Params;
typedef struct xdc_runtime_HeapMin_Object xdc_runtime_HeapMin_Object;
typedef struct xdc_runtime_HeapMin_Struct xdc_runtime_HeapMin_Struct;
typedef xdc_runtime_HeapMin_Object* xdc_runtime_HeapMin_Handle;
typedef struct xdc_runtime_HeapMin_Object__ xdc_runtime_HeapMin_Instance_State;
typedef xdc_runtime_HeapMin_Object* xdc_runtime_HeapMin_Instance;



 

typedef struct xdc_runtime_HeapStd_Module_State xdc_runtime_HeapStd_Module_State;
typedef struct xdc_runtime_HeapStd_Fxns__ xdc_runtime_HeapStd_Fxns__;
typedef const xdc_runtime_HeapStd_Fxns__* xdc_runtime_HeapStd_Module;
typedef struct xdc_runtime_HeapStd_Params xdc_runtime_HeapStd_Params;
typedef struct xdc_runtime_HeapStd_Object xdc_runtime_HeapStd_Object;
typedef struct xdc_runtime_HeapStd_Struct xdc_runtime_HeapStd_Struct;
typedef xdc_runtime_HeapStd_Object* xdc_runtime_HeapStd_Handle;
typedef struct xdc_runtime_HeapStd_Object__ xdc_runtime_HeapStd_Instance_State;
typedef xdc_runtime_HeapStd_Object* xdc_runtime_HeapStd_Instance;



 

typedef struct xdc_runtime_Registry_Module_State xdc_runtime_Registry_Module_State;



 

typedef struct xdc_runtime_Rta_CommandPacket xdc_runtime_Rta_CommandPacket;
typedef struct xdc_runtime_Rta_ResponsePacket xdc_runtime_Rta_ResponsePacket;



 

typedef struct xdc_runtime_Startup_IdMap xdc_runtime_Startup_IdMap;
typedef struct xdc_runtime_Startup_Module_State xdc_runtime_Startup_Module_State;



 

typedef struct xdc_runtime_System_ParseData xdc_runtime_System_ParseData;
typedef struct xdc_runtime_System_Module_State xdc_runtime_System_Module_State;



 

typedef struct xdc_runtime_ISystemSupport_Fxns__ xdc_runtime_ISystemSupport_Fxns__;
typedef const xdc_runtime_ISystemSupport_Fxns__* xdc_runtime_ISystemSupport_Module;



 

typedef struct xdc_runtime_SysCallback_Fxns__ xdc_runtime_SysCallback_Fxns__;
typedef const xdc_runtime_SysCallback_Fxns__* xdc_runtime_SysCallback_Module;



 

typedef struct xdc_runtime_SysMin_Module_State xdc_runtime_SysMin_Module_State;
typedef struct xdc_runtime_SysMin_Fxns__ xdc_runtime_SysMin_Fxns__;
typedef const xdc_runtime_SysMin_Fxns__* xdc_runtime_SysMin_Module;



 

typedef struct xdc_runtime_SysStd_Fxns__ xdc_runtime_SysStd_Fxns__;
typedef const xdc_runtime_SysStd_Fxns__* xdc_runtime_SysStd_Module;



 

typedef struct xdc_runtime_Text_Node xdc_runtime_Text_Node;
typedef struct xdc_runtime_Text_MatchVisState xdc_runtime_Text_MatchVisState;
typedef struct xdc_runtime_Text_PrintVisState xdc_runtime_Text_PrintVisState;
typedef struct xdc_runtime_Text_Module_State xdc_runtime_Text_Module_State;



 

typedef struct xdc_runtime_ITimestampClient_Fxns__ xdc_runtime_ITimestampClient_Fxns__;
typedef const xdc_runtime_ITimestampClient_Fxns__* xdc_runtime_ITimestampClient_Module;



 

typedef struct xdc_runtime_Timestamp_Fxns__ xdc_runtime_Timestamp_Fxns__;
typedef const xdc_runtime_Timestamp_Fxns__* xdc_runtime_Timestamp_Module;



 

typedef struct xdc_runtime_ITimestampProvider_Fxns__ xdc_runtime_ITimestampProvider_Fxns__;
typedef const xdc_runtime_ITimestampProvider_Fxns__* xdc_runtime_ITimestampProvider_Module;



 

typedef struct xdc_runtime_TimestampNull_Fxns__ xdc_runtime_TimestampNull_Fxns__;
typedef const xdc_runtime_TimestampNull_Fxns__* xdc_runtime_TimestampNull_Module;



 

typedef struct xdc_runtime_TimestampStd_Fxns__ xdc_runtime_TimestampStd_Fxns__;
typedef const xdc_runtime_TimestampStd_Fxns__* xdc_runtime_TimestampStd_Module;



 

typedef struct xdc_runtime_Types_CordAddr__ xdc_runtime_Types_CordAddr__;
typedef struct xdc_runtime_Types_GateRef__ xdc_runtime_Types_GateRef__;
typedef struct xdc_runtime_Types_Label xdc_runtime_Types_Label;
typedef struct xdc_runtime_Types_Site xdc_runtime_Types_Site;
typedef struct xdc_runtime_Types_Timestamp64 xdc_runtime_Types_Timestamp64;
typedef struct xdc_runtime_Types_FreqHz xdc_runtime_Types_FreqHz;
typedef struct xdc_runtime_Types_RegDesc xdc_runtime_Types_RegDesc;
typedef struct xdc_runtime_Types_Vec xdc_runtime_Types_Vec;
typedef struct xdc_runtime_Types_Link xdc_runtime_Types_Link;
typedef struct xdc_runtime_Types_InstHdr xdc_runtime_Types_InstHdr;
typedef struct xdc_runtime_Types_PrmsHdr xdc_runtime_Types_PrmsHdr;
typedef struct xdc_runtime_Types_Base xdc_runtime_Types_Base;
typedef struct xdc_runtime_Types_SysFxns xdc_runtime_Types_SysFxns;
typedef struct xdc_runtime_Types_SysFxns2 xdc_runtime_Types_SysFxns2;



 

typedef struct xdc_runtime_IInstance_Fxns__ xdc_runtime_IInstance_Fxns__;
typedef const xdc_runtime_IInstance_Fxns__* xdc_runtime_IInstance_Module;
typedef struct xdc_runtime_IInstance_Params xdc_runtime_IInstance_Params;
typedef struct xdc_runtime_IInstance___Object { xdc_runtime_IInstance_Fxns__* __fxns; xdc_Bits32 __label; } *xdc_runtime_IInstance_Handle;



 

typedef struct xdc_runtime_LoggerBuf_TimestampProxy_Fxns__ xdc_runtime_LoggerBuf_TimestampProxy_Fxns__;
typedef const xdc_runtime_LoggerBuf_TimestampProxy_Fxns__* xdc_runtime_LoggerBuf_TimestampProxy_Module;



 

typedef struct xdc_runtime_LoggerBuf_Module_GateProxy_Fxns__ xdc_runtime_LoggerBuf_Module_GateProxy_Fxns__;
typedef const xdc_runtime_LoggerBuf_Module_GateProxy_Fxns__* xdc_runtime_LoggerBuf_Module_GateProxy_Module;
typedef struct xdc_runtime_LoggerBuf_Module_GateProxy_Params xdc_runtime_LoggerBuf_Module_GateProxy_Params;
typedef struct xdc_runtime_IGateProvider___Object *xdc_runtime_LoggerBuf_Module_GateProxy_Handle;



 

typedef struct xdc_runtime_LoggerSys_TimestampProxy_Fxns__ xdc_runtime_LoggerSys_TimestampProxy_Fxns__;
typedef const xdc_runtime_LoggerSys_TimestampProxy_Fxns__* xdc_runtime_LoggerSys_TimestampProxy_Module;



 

typedef struct xdc_runtime_Main_Module_GateProxy_Fxns__ xdc_runtime_Main_Module_GateProxy_Fxns__;
typedef const xdc_runtime_Main_Module_GateProxy_Fxns__* xdc_runtime_Main_Module_GateProxy_Module;
typedef struct xdc_runtime_Main_Module_GateProxy_Params xdc_runtime_Main_Module_GateProxy_Params;
typedef struct xdc_runtime_IGateProvider___Object *xdc_runtime_Main_Module_GateProxy_Handle;



 

typedef struct xdc_runtime_Memory_HeapProxy_Fxns__ xdc_runtime_Memory_HeapProxy_Fxns__;
typedef const xdc_runtime_Memory_HeapProxy_Fxns__* xdc_runtime_Memory_HeapProxy_Module;
typedef struct xdc_runtime_Memory_HeapProxy_Params xdc_runtime_Memory_HeapProxy_Params;
typedef struct xdc_runtime_IHeap___Object *xdc_runtime_Memory_HeapProxy_Handle;



 

typedef struct xdc_runtime_System_SupportProxy_Fxns__ xdc_runtime_System_SupportProxy_Fxns__;
typedef const xdc_runtime_System_SupportProxy_Fxns__* xdc_runtime_System_SupportProxy_Module;



 

typedef struct xdc_runtime_System_Module_GateProxy_Fxns__ xdc_runtime_System_Module_GateProxy_Fxns__;
typedef const xdc_runtime_System_Module_GateProxy_Fxns__* xdc_runtime_System_Module_GateProxy_Module;
typedef struct xdc_runtime_System_Module_GateProxy_Params xdc_runtime_System_Module_GateProxy_Params;
typedef struct xdc_runtime_IGateProvider___Object *xdc_runtime_System_Module_GateProxy_Handle;



 

typedef struct xdc_runtime_Timestamp_SupportProxy_Fxns__ xdc_runtime_Timestamp_SupportProxy_Fxns__;
typedef const xdc_runtime_Timestamp_SupportProxy_Fxns__* xdc_runtime_Timestamp_SupportProxy_Module;


# 55 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"




 

 
typedef xdc_Bits16 xdc_runtime_Types_ModuleId;

 
typedef xdc_Bits16 xdc_runtime_Types_DiagsMask;

 
typedef xdc_Bits32 xdc_runtime_Types_Event;

 
typedef xdc_runtime_Types_Event xdc_runtime_Types_EventId;

 
struct xdc_runtime_Types_CordAddr__;

 
typedef xdc_runtime_Types_CordAddr__ *xdc_runtime_Types_CordAddr;

 
struct xdc_runtime_Types_GateRef__;

 
typedef xdc_runtime_Types_GateRef__ *xdc_runtime_Types_GateRef;

 
typedef xdc_Bits16 xdc_runtime_Types_RopeId;

 
enum xdc_runtime_Types_CreatePolicy {
    xdc_runtime_Types_STATIC_POLICY,
    xdc_runtime_Types_CREATE_POLICY,
    xdc_runtime_Types_DELETE_POLICY
};
typedef enum xdc_runtime_Types_CreatePolicy xdc_runtime_Types_CreatePolicy;

 
enum xdc_runtime_Types_OutputPolicy {
    xdc_runtime_Types_COMMON_FILE,
    xdc_runtime_Types_SEPARATE_FILE,
    xdc_runtime_Types_NO_FILE
};
typedef enum xdc_runtime_Types_OutputPolicy xdc_runtime_Types_OutputPolicy;

 
struct xdc_runtime_Types_Label {
    xdc_Ptr handle;
    xdc_runtime_Types_ModuleId modId;
    xdc_String iname;
    xdc_Bool named;
};

 
struct xdc_runtime_Types_Site {
    xdc_runtime_Types_ModuleId mod;
    xdc_CString file;
    xdc_Int line;
};

 
struct xdc_runtime_Types_Timestamp64 {
    xdc_Bits32 hi;
    xdc_Bits32 lo;
};

 
struct xdc_runtime_Types_FreqHz {
    xdc_Bits32 hi;
    xdc_Bits32 lo;
};

 
struct xdc_runtime_Types_RegDesc {
    xdc_runtime_Types_RegDesc *next;
    xdc_CString modName;
    xdc_runtime_Types_ModuleId id;
    xdc_runtime_Types_DiagsMask mask;
};




 

 
typedef xdc_Bits32 xdc_runtime_Types_LogEvent;

 
typedef void (*xdc_runtime_Types_LoggerFxn0)(xdc_Ptr, xdc_runtime_Types_LogEvent, xdc_runtime_Types_ModuleId);

 
typedef void (*xdc_runtime_Types_LoggerFxn1)(xdc_Ptr, xdc_runtime_Types_LogEvent, xdc_runtime_Types_ModuleId, xdc_IArg);

 
typedef void (*xdc_runtime_Types_LoggerFxn2)(xdc_Ptr, xdc_runtime_Types_LogEvent, xdc_runtime_Types_ModuleId, xdc_IArg, xdc_IArg);

 
typedef void (*xdc_runtime_Types_LoggerFxn4)(xdc_Ptr, xdc_runtime_Types_LogEvent, xdc_runtime_Types_ModuleId, xdc_IArg, xdc_IArg, xdc_IArg, xdc_IArg);

 
typedef void (*xdc_runtime_Types_LoggerFxn8)(xdc_Ptr, xdc_runtime_Types_LogEvent, xdc_runtime_Types_ModuleId, xdc_IArg, xdc_IArg, xdc_IArg, xdc_IArg, xdc_IArg, xdc_IArg, xdc_IArg, xdc_IArg);

 
struct xdc_runtime_Types_Vec {
    xdc_Int len;
    xdc_Ptr arr;
};

 
struct xdc_runtime_Types_Link {
    xdc_runtime_Types_Link *next;
    xdc_runtime_Types_Link *prev;
};

 
struct xdc_runtime_Types_InstHdr {
    xdc_runtime_Types_Link link;
};

 
struct xdc_runtime_Types_PrmsHdr {
    xdc_SizeT size;
    xdc_Ptr self;
    xdc_Ptr modFxns;
    xdc_Ptr instPrms;
};

 
struct xdc_runtime_Types_Base {
    xdc_runtime_Types_Base *base;
};

 
struct xdc_runtime_Types_SysFxns {
    xdc_Ptr (*__create)(xdc_Ptr, xdc_SizeT, xdc_Ptr, const xdc_Ptr, xdc_SizeT, xdc_runtime_Error_Block*);
    void (*__delete)(xdc_Ptr);
    xdc_runtime_Types_Label *(*__label)(xdc_Ptr, xdc_runtime_Types_Label*);
    xdc_runtime_Types_ModuleId __mid;
};

 
struct xdc_runtime_Types_SysFxns2 {
    xdc_Ptr (*__create)(xdc_Ptr, xdc_SizeT, xdc_Ptr, const xdc_UChar*, xdc_SizeT, xdc_runtime_Error_Block*);
    void (*__delete)(xdc_Ptr);
    xdc_runtime_Types_Label *(*__label)(xdc_Ptr, xdc_runtime_Types_Label*);
    xdc_runtime_Types_ModuleId __mid;
};




 

 
typedef xdc_Bits32 CT__xdc_runtime_Types_Module__diagsEnabled;
extern  const CT__xdc_runtime_Types_Module__diagsEnabled xdc_runtime_Types_Module__diagsEnabled__C;

 
typedef xdc_Bits32 CT__xdc_runtime_Types_Module__diagsIncluded;
extern  const CT__xdc_runtime_Types_Module__diagsIncluded xdc_runtime_Types_Module__diagsIncluded__C;

 
typedef xdc_Bits16 *CT__xdc_runtime_Types_Module__diagsMask;
extern  const CT__xdc_runtime_Types_Module__diagsMask xdc_runtime_Types_Module__diagsMask__C;

 
typedef xdc_Ptr CT__xdc_runtime_Types_Module__gateObj;
extern  const CT__xdc_runtime_Types_Module__gateObj xdc_runtime_Types_Module__gateObj__C;

 
typedef xdc_Ptr CT__xdc_runtime_Types_Module__gatePrms;
extern  const CT__xdc_runtime_Types_Module__gatePrms xdc_runtime_Types_Module__gatePrms__C;

 
typedef xdc_runtime_Types_ModuleId CT__xdc_runtime_Types_Module__id;
extern  const CT__xdc_runtime_Types_Module__id xdc_runtime_Types_Module__id__C;

 
typedef xdc_Bool CT__xdc_runtime_Types_Module__loggerDefined;
extern  const CT__xdc_runtime_Types_Module__loggerDefined xdc_runtime_Types_Module__loggerDefined__C;

 
typedef xdc_Ptr CT__xdc_runtime_Types_Module__loggerObj;
extern  const CT__xdc_runtime_Types_Module__loggerObj xdc_runtime_Types_Module__loggerObj__C;

 
typedef xdc_runtime_Types_LoggerFxn0 CT__xdc_runtime_Types_Module__loggerFxn0;
extern  const CT__xdc_runtime_Types_Module__loggerFxn0 xdc_runtime_Types_Module__loggerFxn0__C;

 
typedef xdc_runtime_Types_LoggerFxn1 CT__xdc_runtime_Types_Module__loggerFxn1;
extern  const CT__xdc_runtime_Types_Module__loggerFxn1 xdc_runtime_Types_Module__loggerFxn1__C;

 
typedef xdc_runtime_Types_LoggerFxn2 CT__xdc_runtime_Types_Module__loggerFxn2;
extern  const CT__xdc_runtime_Types_Module__loggerFxn2 xdc_runtime_Types_Module__loggerFxn2__C;

 
typedef xdc_runtime_Types_LoggerFxn4 CT__xdc_runtime_Types_Module__loggerFxn4;
extern  const CT__xdc_runtime_Types_Module__loggerFxn4 xdc_runtime_Types_Module__loggerFxn4__C;

 
typedef xdc_runtime_Types_LoggerFxn8 CT__xdc_runtime_Types_Module__loggerFxn8;
extern  const CT__xdc_runtime_Types_Module__loggerFxn8 xdc_runtime_Types_Module__loggerFxn8__C;

 
typedef xdc_Bool (*CT__xdc_runtime_Types_Module__startupDoneFxn)(void);
extern  const CT__xdc_runtime_Types_Module__startupDoneFxn xdc_runtime_Types_Module__startupDoneFxn__C;

 
typedef xdc_Int CT__xdc_runtime_Types_Object__count;
extern  const CT__xdc_runtime_Types_Object__count xdc_runtime_Types_Object__count__C;

 
typedef xdc_runtime_IHeap_Handle CT__xdc_runtime_Types_Object__heap;
extern  const CT__xdc_runtime_Types_Object__heap xdc_runtime_Types_Object__heap__C;

 
typedef xdc_SizeT CT__xdc_runtime_Types_Object__sizeof;
extern  const CT__xdc_runtime_Types_Object__sizeof xdc_runtime_Types_Object__sizeof__C;

 
typedef xdc_Ptr CT__xdc_runtime_Types_Object__table;
extern  const CT__xdc_runtime_Types_Object__table xdc_runtime_Types_Object__table__C;




 

 


 

extern xdc_Bool xdc_runtime_Types_Module__startupDone__S( void );




 

 


 


 


 
static inline CT__xdc_runtime_Types_Module__id xdc_runtime_Types_Module_id( void ) 
{
    return xdc_runtime_Types_Module__id__C;
}

 
static inline xdc_Bool xdc_runtime_Types_Module_hasMask( void ) 
{
    return xdc_runtime_Types_Module__diagsMask__C != 0;
}

 
static inline xdc_Bits16 xdc_runtime_Types_Module_getMask( void ) 
{
    return xdc_runtime_Types_Module__diagsMask__C != 0 ? *xdc_runtime_Types_Module__diagsMask__C : 0;
}

 
static inline void xdc_runtime_Types_Module_setMask( xdc_Bits16 mask ) 
{
    if (xdc_runtime_Types_Module__diagsMask__C != 0) *xdc_runtime_Types_Module__diagsMask__C = mask;
}




 

# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types__epilogue.h"











 



 



 





 





 



 

# 341 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"










 

# 362 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"



 

# 423 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"


 

# 54 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/bios_6_42_00_08/packages/ti/sysbios/family/arm/cc26xx/Boot.h"
# 1 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/bios_6_42_00_08/packages/ti/sysbios/family/arm/cc26xx/package/package.defs.h"





 







 

typedef struct ti_sysbios_family_arm_cc26xx_Alarm_Params ti_sysbios_family_arm_cc26xx_Alarm_Params;
typedef struct ti_sysbios_family_arm_cc26xx_Alarm_Object ti_sysbios_family_arm_cc26xx_Alarm_Object;
typedef struct ti_sysbios_family_arm_cc26xx_Alarm_Struct ti_sysbios_family_arm_cc26xx_Alarm_Struct;
typedef ti_sysbios_family_arm_cc26xx_Alarm_Object* ti_sysbios_family_arm_cc26xx_Alarm_Handle;
typedef struct ti_sysbios_family_arm_cc26xx_Alarm_Object__ ti_sysbios_family_arm_cc26xx_Alarm_Instance_State;
typedef ti_sysbios_family_arm_cc26xx_Alarm_Object* ti_sysbios_family_arm_cc26xx_Alarm_Instance;



 




 

typedef struct ti_sysbios_family_arm_cc26xx_Power_NotifyObj ti_sysbios_family_arm_cc26xx_Power_NotifyObj;
typedef struct ti_sysbios_family_arm_cc26xx_Power_Module_State ti_sysbios_family_arm_cc26xx_Power_Module_State;
typedef struct ti_sysbios_family_arm_cc26xx_Power_Fxns__ ti_sysbios_family_arm_cc26xx_Power_Fxns__;
typedef const ti_sysbios_family_arm_cc26xx_Power_Fxns__* ti_sysbios_family_arm_cc26xx_Power_Module;



 

typedef struct ti_sysbios_family_arm_cc26xx_Seconds_Module_State ti_sysbios_family_arm_cc26xx_Seconds_Module_State;
typedef struct ti_sysbios_family_arm_cc26xx_Seconds_Fxns__ ti_sysbios_family_arm_cc26xx_Seconds_Fxns__;
typedef const ti_sysbios_family_arm_cc26xx_Seconds_Fxns__* ti_sysbios_family_arm_cc26xx_Seconds_Module;



 

typedef struct ti_sysbios_family_arm_cc26xx_Timer_Module_State ti_sysbios_family_arm_cc26xx_Timer_Module_State;
typedef struct ti_sysbios_family_arm_cc26xx_Timer_Fxns__ ti_sysbios_family_arm_cc26xx_Timer_Fxns__;
typedef const ti_sysbios_family_arm_cc26xx_Timer_Fxns__* ti_sysbios_family_arm_cc26xx_Timer_Module;
typedef struct ti_sysbios_family_arm_cc26xx_Timer_Params ti_sysbios_family_arm_cc26xx_Timer_Params;
typedef struct ti_sysbios_family_arm_cc26xx_Timer_Object ti_sysbios_family_arm_cc26xx_Timer_Object;
typedef struct ti_sysbios_family_arm_cc26xx_Timer_Struct ti_sysbios_family_arm_cc26xx_Timer_Struct;
typedef ti_sysbios_family_arm_cc26xx_Timer_Object* ti_sysbios_family_arm_cc26xx_Timer_Handle;
typedef struct ti_sysbios_family_arm_cc26xx_Timer_Object__ ti_sysbios_family_arm_cc26xx_Timer_Instance_State;
typedef ti_sysbios_family_arm_cc26xx_Timer_Object* ti_sysbios_family_arm_cc26xx_Timer_Instance;



 

typedef struct ti_sysbios_family_arm_cc26xx_TimestampProvider_Module_State ti_sysbios_family_arm_cc26xx_TimestampProvider_Module_State;
typedef struct ti_sysbios_family_arm_cc26xx_TimestampProvider_Fxns__ ti_sysbios_family_arm_cc26xx_TimestampProvider_Fxns__;
typedef const ti_sysbios_family_arm_cc26xx_TimestampProvider_Fxns__* ti_sysbios_family_arm_cc26xx_TimestampProvider_Module;


# 55 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/bios_6_42_00_08/packages/ti/sysbios/family/arm/cc26xx/Boot.h"

# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IModule.h"





 













 




 




















 



# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"





 















 




 

# 347 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"




 

# 362 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"



 

# 423 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"


 

# 52 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IModule.h"


# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"





 















 




 

# 347 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"




 

# 362 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"



 

# 423 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"


 

# 55 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IModule.h"
# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IHeap.h"





 














 




 




















 



# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"





 















 




 

# 347 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"




 

# 362 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"



 

# 423 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"


 

# 53 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IHeap.h"
# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IInstance.h"





 














 




 




















 



# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"





 















 




 

# 347 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"




 

# 362 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"



 

# 423 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"


 

# 53 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IInstance.h"





 




 

 
struct xdc_runtime_IInstance_Params {
    size_t __size;
    xdc_String name;
};




 

 
struct xdc_runtime_IInstance_Fxns__ {
    xdc_runtime_Types_Base* __base;
    const xdc_runtime_Types_SysFxns2 *__sysp;
    xdc_runtime_Types_SysFxns2 __sfxns;
};

 
extern const xdc_runtime_Types_Base xdc_runtime_IInstance_Interface__BASE__C;




 

 

extern xdc_runtime_IInstance_Handle xdc_runtime_IInstance_create(xdc_runtime_IInstance_Module, const xdc_runtime_IInstance_Params *, xdc_runtime_Error_Block *__eb);

 

extern void xdc_runtime_IInstance_delete(xdc_runtime_IInstance_Handle *);

 
static inline xdc_runtime_IInstance_Module xdc_runtime_IInstance_Handle_to_Module( xdc_runtime_IInstance_Handle inst )
{
    return inst->__fxns;
}

 
static inline xdc_runtime_Types_Label *xdc_runtime_IInstance_Handle_label( xdc_runtime_IInstance_Handle inst, xdc_runtime_Types_Label *lab )
{
    return inst->__fxns->__sysp->__label(inst, lab);
}

 
static inline xdc_runtime_Types_ModuleId xdc_runtime_IInstance_Module_id( xdc_runtime_IInstance_Module mod )
{
    return mod->__sysp->__mid;
}




 




 










 

# 155 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IInstance.h"


 

# 54 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IHeap.h"


# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IModule.h"





 













 




 

# 104 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IModule.h"




 

# 121 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IModule.h"


 

# 57 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IHeap.h"
# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Error.h"





 















 




 




















 



# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"





 















 




 

# 347 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"




 

# 362 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"



 

# 423 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"


 

# 54 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Error.h"
# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Error__prologue.h"











 
# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Main.h"





 















 




 




















 



# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"





 















 




 

# 347 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"




 

# 362 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"



 

# 423 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"


 

# 54 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Main.h"


# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IModule.h"





 













 




 

# 104 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IModule.h"




 

# 121 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IModule.h"


 

# 57 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Main.h"
# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IGateProvider.h"





 














 




 




















 



# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"





 















 




 

# 347 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"




 

# 362 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"



 

# 423 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"


 

# 53 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IGateProvider.h"
# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IInstance.h"





 














 




 

# 132 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IInstance.h"




 

# 155 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IInstance.h"


 

# 54 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IGateProvider.h"


# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IModule.h"





 













 




 

# 104 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IModule.h"




 

# 121 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IModule.h"


 

# 57 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IGateProvider.h"




 

 


 





 

 
struct xdc_runtime_IGateProvider_Params {
    size_t __size;
    const void *__self;
    void *__fxns;
    xdc_runtime_IInstance_Params *instance;
};




 

 
struct xdc_runtime_IGateProvider_Fxns__ {
    xdc_runtime_Types_Base* __base;
    const xdc_runtime_Types_SysFxns2 *__sysp;
    xdc_Bool (*query)(xdc_Int);
    xdc_IArg (*enter)(void*);
    void (*leave)(void*, xdc_IArg);
    xdc_runtime_Types_SysFxns2 __sfxns;
};

 
extern const xdc_runtime_Types_Base xdc_runtime_IGateProvider_Interface__BASE__C;




 

 

extern xdc_runtime_IGateProvider_Handle xdc_runtime_IGateProvider_create(xdc_runtime_IGateProvider_Module, const xdc_runtime_IGateProvider_Params *, xdc_runtime_Error_Block *__eb);

 

extern void xdc_runtime_IGateProvider_delete(xdc_runtime_IGateProvider_Handle *);

 
static inline xdc_runtime_IGateProvider_Module xdc_runtime_IGateProvider_Handle_to_Module( xdc_runtime_IGateProvider_Handle inst )
{
    return inst->__fxns;
}

 
static inline xdc_runtime_Types_Label *xdc_runtime_IGateProvider_Handle_label( xdc_runtime_IGateProvider_Handle inst, xdc_runtime_Types_Label *lab )
{
    return inst->__fxns->__sysp->__label(inst, lab);
}

 
static inline xdc_runtime_Types_ModuleId xdc_runtime_IGateProvider_Module_id( xdc_runtime_IGateProvider_Module mod )
{
    return mod->__sysp->__mid;
}

 
static inline xdc_Bool xdc_runtime_IGateProvider_query( xdc_runtime_IGateProvider_Module __inst, xdc_Int qual )
{
    return __inst->query(qual);
}

 
static inline xdc_IArg xdc_runtime_IGateProvider_enter( xdc_runtime_IGateProvider_Handle __inst )
{
    return __inst->__fxns->enter((void*)__inst);
}

 
static inline void xdc_runtime_IGateProvider_leave( xdc_runtime_IGateProvider_Handle __inst, xdc_IArg key )
{
    __inst->__fxns->leave((void*)__inst, key);
}




 






 

 
typedef xdc_Bool (*xdc_runtime_IGateProvider_query_FxnT)(xdc_Int);
static inline xdc_runtime_IGateProvider_query_FxnT xdc_runtime_IGateProvider_query_fxnP( xdc_runtime_IGateProvider_Module __inst )
{
    return (xdc_runtime_IGateProvider_query_FxnT)__inst->query;
}

 
typedef xdc_IArg (*xdc_runtime_IGateProvider_enter_FxnT)(void *);
static inline xdc_runtime_IGateProvider_enter_FxnT xdc_runtime_IGateProvider_enter_fxnP( xdc_runtime_IGateProvider_Handle __inst )
{
    return (xdc_runtime_IGateProvider_enter_FxnT)__inst->__fxns->enter;
}

 
typedef void (*xdc_runtime_IGateProvider_leave_FxnT)(void *, xdc_IArg);
static inline xdc_runtime_IGateProvider_leave_FxnT xdc_runtime_IGateProvider_leave_fxnP( xdc_runtime_IGateProvider_Handle __inst )
{
    return (xdc_runtime_IGateProvider_leave_FxnT)__inst->__fxns->leave;
}




 










 

# 227 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IGateProvider.h"


 

# 58 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Main.h"
# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/package/Main_Module_GateProxy.h"





 
















 




 




















 



# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"





 















 




 

# 347 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"




 

# 362 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"



 

# 423 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"


 

# 55 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/package/Main_Module_GateProxy.h"
# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IInstance.h"





 














 




 

# 132 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IInstance.h"




 

# 155 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IInstance.h"


 

# 56 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/package/Main_Module_GateProxy.h"


# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IGateProvider.h"





 














 




 

# 192 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IGateProvider.h"




 

# 227 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IGateProvider.h"


 

# 59 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/package/Main_Module_GateProxy.h"




 

 


 





 

 
typedef xdc_Bits32 CT__xdc_runtime_Main_Module_GateProxy_Module__diagsEnabled;
extern  const CT__xdc_runtime_Main_Module_GateProxy_Module__diagsEnabled xdc_runtime_Main_Module_GateProxy_Module__diagsEnabled__C;

 
typedef xdc_Bits32 CT__xdc_runtime_Main_Module_GateProxy_Module__diagsIncluded;
extern  const CT__xdc_runtime_Main_Module_GateProxy_Module__diagsIncluded xdc_runtime_Main_Module_GateProxy_Module__diagsIncluded__C;

 
typedef xdc_Bits16 *CT__xdc_runtime_Main_Module_GateProxy_Module__diagsMask;
extern  const CT__xdc_runtime_Main_Module_GateProxy_Module__diagsMask xdc_runtime_Main_Module_GateProxy_Module__diagsMask__C;

 
typedef xdc_Ptr CT__xdc_runtime_Main_Module_GateProxy_Module__gateObj;
extern  const CT__xdc_runtime_Main_Module_GateProxy_Module__gateObj xdc_runtime_Main_Module_GateProxy_Module__gateObj__C;

 
typedef xdc_Ptr CT__xdc_runtime_Main_Module_GateProxy_Module__gatePrms;
extern  const CT__xdc_runtime_Main_Module_GateProxy_Module__gatePrms xdc_runtime_Main_Module_GateProxy_Module__gatePrms__C;

 
typedef xdc_runtime_Types_ModuleId CT__xdc_runtime_Main_Module_GateProxy_Module__id;
extern  const CT__xdc_runtime_Main_Module_GateProxy_Module__id xdc_runtime_Main_Module_GateProxy_Module__id__C;

 
typedef xdc_Bool CT__xdc_runtime_Main_Module_GateProxy_Module__loggerDefined;
extern  const CT__xdc_runtime_Main_Module_GateProxy_Module__loggerDefined xdc_runtime_Main_Module_GateProxy_Module__loggerDefined__C;

 
typedef xdc_Ptr CT__xdc_runtime_Main_Module_GateProxy_Module__loggerObj;
extern  const CT__xdc_runtime_Main_Module_GateProxy_Module__loggerObj xdc_runtime_Main_Module_GateProxy_Module__loggerObj__C;

 
typedef xdc_runtime_Types_LoggerFxn0 CT__xdc_runtime_Main_Module_GateProxy_Module__loggerFxn0;
extern  const CT__xdc_runtime_Main_Module_GateProxy_Module__loggerFxn0 xdc_runtime_Main_Module_GateProxy_Module__loggerFxn0__C;

 
typedef xdc_runtime_Types_LoggerFxn1 CT__xdc_runtime_Main_Module_GateProxy_Module__loggerFxn1;
extern  const CT__xdc_runtime_Main_Module_GateProxy_Module__loggerFxn1 xdc_runtime_Main_Module_GateProxy_Module__loggerFxn1__C;

 
typedef xdc_runtime_Types_LoggerFxn2 CT__xdc_runtime_Main_Module_GateProxy_Module__loggerFxn2;
extern  const CT__xdc_runtime_Main_Module_GateProxy_Module__loggerFxn2 xdc_runtime_Main_Module_GateProxy_Module__loggerFxn2__C;

 
typedef xdc_runtime_Types_LoggerFxn4 CT__xdc_runtime_Main_Module_GateProxy_Module__loggerFxn4;
extern  const CT__xdc_runtime_Main_Module_GateProxy_Module__loggerFxn4 xdc_runtime_Main_Module_GateProxy_Module__loggerFxn4__C;

 
typedef xdc_runtime_Types_LoggerFxn8 CT__xdc_runtime_Main_Module_GateProxy_Module__loggerFxn8;
extern  const CT__xdc_runtime_Main_Module_GateProxy_Module__loggerFxn8 xdc_runtime_Main_Module_GateProxy_Module__loggerFxn8__C;

 
typedef xdc_Bool (*CT__xdc_runtime_Main_Module_GateProxy_Module__startupDoneFxn)(void);
extern  const CT__xdc_runtime_Main_Module_GateProxy_Module__startupDoneFxn xdc_runtime_Main_Module_GateProxy_Module__startupDoneFxn__C;

 
typedef xdc_Int CT__xdc_runtime_Main_Module_GateProxy_Object__count;
extern  const CT__xdc_runtime_Main_Module_GateProxy_Object__count xdc_runtime_Main_Module_GateProxy_Object__count__C;

 
typedef xdc_runtime_IHeap_Handle CT__xdc_runtime_Main_Module_GateProxy_Object__heap;
extern  const CT__xdc_runtime_Main_Module_GateProxy_Object__heap xdc_runtime_Main_Module_GateProxy_Object__heap__C;

 
typedef xdc_SizeT CT__xdc_runtime_Main_Module_GateProxy_Object__sizeof;
extern  const CT__xdc_runtime_Main_Module_GateProxy_Object__sizeof xdc_runtime_Main_Module_GateProxy_Object__sizeof__C;

 
typedef xdc_Ptr CT__xdc_runtime_Main_Module_GateProxy_Object__table;
extern  const CT__xdc_runtime_Main_Module_GateProxy_Object__table xdc_runtime_Main_Module_GateProxy_Object__table__C;




 

 
struct xdc_runtime_Main_Module_GateProxy_Params {
    size_t __size;
    const void *__self;
    void *__fxns;
    xdc_runtime_IInstance_Params *instance;
    xdc_runtime_IInstance_Params __iprms;
};

 
struct xdc_runtime_Main_Module_GateProxy_Struct {
    const xdc_runtime_Main_Module_GateProxy_Fxns__ *__fxns;
    xdc_runtime_Types_CordAddr __name;
};




 

 
struct xdc_runtime_Main_Module_GateProxy_Fxns__ {
    xdc_runtime_Types_Base* __base;
    const xdc_runtime_Types_SysFxns2 *__sysp;
    xdc_Bool (*query)(xdc_Int);
    xdc_IArg (*enter)(xdc_runtime_Main_Module_GateProxy_Handle);
    void (*leave)(xdc_runtime_Main_Module_GateProxy_Handle, xdc_IArg);
    xdc_runtime_Types_SysFxns2 __sfxns;
};

 
extern const xdc_runtime_Main_Module_GateProxy_Fxns__ xdc_runtime_Main_Module_GateProxy_Module__FXNS__C;




 

 


 

extern xdc_runtime_Types_Label *xdc_runtime_Main_Module_GateProxy_Handle__label__S( xdc_Ptr obj, xdc_runtime_Types_Label *lab );

 

extern xdc_Bool xdc_runtime_Main_Module_GateProxy_Module__startupDone__S( void );

 

extern xdc_Ptr xdc_runtime_Main_Module_GateProxy_Object__create__S( xdc_Ptr __oa, xdc_SizeT __osz, xdc_Ptr __aa, const xdc_UChar *__pa, xdc_SizeT __psz, xdc_runtime_Error_Block *__eb );

 

extern xdc_runtime_Main_Module_GateProxy_Handle xdc_runtime_Main_Module_GateProxy_create( const xdc_runtime_Main_Module_GateProxy_Params *__prms, xdc_runtime_Error_Block *__eb );

 

extern void xdc_runtime_Main_Module_GateProxy_Object__delete__S( xdc_Ptr instp );

 

extern void xdc_runtime_Main_Module_GateProxy_delete(xdc_runtime_Main_Module_GateProxy_Handle *instp);

 

extern void xdc_runtime_Main_Module_GateProxy_Object__destruct__S( xdc_Ptr objp );

 

extern xdc_Ptr xdc_runtime_Main_Module_GateProxy_Object__get__S( xdc_Ptr oarr, xdc_Int i );

 

extern xdc_Ptr xdc_runtime_Main_Module_GateProxy_Object__first__S( void );

 

extern xdc_Ptr xdc_runtime_Main_Module_GateProxy_Object__next__S( xdc_Ptr obj );

 

extern void xdc_runtime_Main_Module_GateProxy_Params__init__S( xdc_Ptr dst, const void *src, xdc_SizeT psz, xdc_SizeT isz );

 

extern xdc_Bool xdc_runtime_Main_Module_GateProxy_Proxy__abstract__S( void );

 

extern xdc_Ptr xdc_runtime_Main_Module_GateProxy_Proxy__delegate__S( void );

 


extern xdc_Bool xdc_runtime_Main_Module_GateProxy_query__E( xdc_Int qual );

 


extern xdc_IArg xdc_runtime_Main_Module_GateProxy_enter__E( xdc_runtime_Main_Module_GateProxy_Handle __inst );

 


extern void xdc_runtime_Main_Module_GateProxy_leave__E( xdc_runtime_Main_Module_GateProxy_Handle __inst, xdc_IArg key );




 

 
static inline xdc_runtime_IGateProvider_Module xdc_runtime_Main_Module_GateProxy_Module_upCast( void )
{
    return (xdc_runtime_IGateProvider_Module)xdc_runtime_Main_Module_GateProxy_Proxy__delegate__S();
}

 


 
static inline xdc_runtime_IGateProvider_Handle xdc_runtime_Main_Module_GateProxy_Handle_upCast( xdc_runtime_Main_Module_GateProxy_Handle i )
{
    return (xdc_runtime_IGateProvider_Handle)i;
}

 


 
static inline xdc_runtime_Main_Module_GateProxy_Handle xdc_runtime_Main_Module_GateProxy_Handle_downCast( xdc_runtime_IGateProvider_Handle i )
{
    xdc_runtime_IGateProvider_Handle i2 = (xdc_runtime_IGateProvider_Handle)i;
if (xdc_runtime_Main_Module_GateProxy_Proxy__abstract__S()) return (xdc_runtime_Main_Module_GateProxy_Handle)i;
    return (void*)i2->__fxns == (void*)xdc_runtime_Main_Module_GateProxy_Proxy__delegate__S() ? (xdc_runtime_Main_Module_GateProxy_Handle)i : 0;
}

 





 

 


 


 


 
static inline CT__xdc_runtime_Main_Module_GateProxy_Module__id xdc_runtime_Main_Module_GateProxy_Module_id( void ) 
{
    return xdc_runtime_Main_Module_GateProxy_Module__id__C;
}

 


 


 
static inline void xdc_runtime_Main_Module_GateProxy_Params_init( xdc_runtime_Main_Module_GateProxy_Params *prms ) 
{
    if (prms) {
        xdc_runtime_Main_Module_GateProxy_Params__init__S(prms, 0, sizeof(xdc_runtime_Main_Module_GateProxy_Params), sizeof(xdc_runtime_IInstance_Params));
    }
}

 
static inline void xdc_runtime_Main_Module_GateProxy_Params_copy(xdc_runtime_Main_Module_GateProxy_Params *dst, const xdc_runtime_Main_Module_GateProxy_Params *src) 
{
    if (dst) {
        xdc_runtime_Main_Module_GateProxy_Params__init__S(dst, (const void *)src, sizeof(xdc_runtime_Main_Module_GateProxy_Params), sizeof(xdc_runtime_IInstance_Params));
    }
}




 










 

# 59 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Main.h"




 




 




 

 
typedef xdc_Bits32 CT__xdc_runtime_Main_Module__diagsEnabled;
extern  const CT__xdc_runtime_Main_Module__diagsEnabled xdc_runtime_Main_Module__diagsEnabled__C;

 
typedef xdc_Bits32 CT__xdc_runtime_Main_Module__diagsIncluded;
extern  const CT__xdc_runtime_Main_Module__diagsIncluded xdc_runtime_Main_Module__diagsIncluded__C;

 
typedef xdc_Bits16 *CT__xdc_runtime_Main_Module__diagsMask;
extern  const CT__xdc_runtime_Main_Module__diagsMask xdc_runtime_Main_Module__diagsMask__C;

 
typedef xdc_Ptr CT__xdc_runtime_Main_Module__gateObj;
extern  const CT__xdc_runtime_Main_Module__gateObj xdc_runtime_Main_Module__gateObj__C;

 
typedef xdc_Ptr CT__xdc_runtime_Main_Module__gatePrms;
extern  const CT__xdc_runtime_Main_Module__gatePrms xdc_runtime_Main_Module__gatePrms__C;

 
typedef xdc_runtime_Types_ModuleId CT__xdc_runtime_Main_Module__id;
extern  const CT__xdc_runtime_Main_Module__id xdc_runtime_Main_Module__id__C;

 
typedef xdc_Bool CT__xdc_runtime_Main_Module__loggerDefined;
extern  const CT__xdc_runtime_Main_Module__loggerDefined xdc_runtime_Main_Module__loggerDefined__C;

 
typedef xdc_Ptr CT__xdc_runtime_Main_Module__loggerObj;
extern  const CT__xdc_runtime_Main_Module__loggerObj xdc_runtime_Main_Module__loggerObj__C;

 
typedef xdc_runtime_Types_LoggerFxn0 CT__xdc_runtime_Main_Module__loggerFxn0;
extern  const CT__xdc_runtime_Main_Module__loggerFxn0 xdc_runtime_Main_Module__loggerFxn0__C;

 
typedef xdc_runtime_Types_LoggerFxn1 CT__xdc_runtime_Main_Module__loggerFxn1;
extern  const CT__xdc_runtime_Main_Module__loggerFxn1 xdc_runtime_Main_Module__loggerFxn1__C;

 
typedef xdc_runtime_Types_LoggerFxn2 CT__xdc_runtime_Main_Module__loggerFxn2;
extern  const CT__xdc_runtime_Main_Module__loggerFxn2 xdc_runtime_Main_Module__loggerFxn2__C;

 
typedef xdc_runtime_Types_LoggerFxn4 CT__xdc_runtime_Main_Module__loggerFxn4;
extern  const CT__xdc_runtime_Main_Module__loggerFxn4 xdc_runtime_Main_Module__loggerFxn4__C;

 
typedef xdc_runtime_Types_LoggerFxn8 CT__xdc_runtime_Main_Module__loggerFxn8;
extern  const CT__xdc_runtime_Main_Module__loggerFxn8 xdc_runtime_Main_Module__loggerFxn8__C;

 
typedef xdc_Bool (*CT__xdc_runtime_Main_Module__startupDoneFxn)(void);
extern  const CT__xdc_runtime_Main_Module__startupDoneFxn xdc_runtime_Main_Module__startupDoneFxn__C;

 
typedef xdc_Int CT__xdc_runtime_Main_Object__count;
extern  const CT__xdc_runtime_Main_Object__count xdc_runtime_Main_Object__count__C;

 
typedef xdc_runtime_IHeap_Handle CT__xdc_runtime_Main_Object__heap;
extern  const CT__xdc_runtime_Main_Object__heap xdc_runtime_Main_Object__heap__C;

 
typedef xdc_SizeT CT__xdc_runtime_Main_Object__sizeof;
extern  const CT__xdc_runtime_Main_Object__sizeof xdc_runtime_Main_Object__sizeof__C;

 
typedef xdc_Ptr CT__xdc_runtime_Main_Object__table;
extern  const CT__xdc_runtime_Main_Object__table xdc_runtime_Main_Object__table__C;




 

 


 

extern xdc_Bool xdc_runtime_Main_Module__startupDone__S( void );




 

 


 


 


 
static inline CT__xdc_runtime_Main_Module__id xdc_runtime_Main_Module_id( void ) 
{
    return xdc_runtime_Main_Module__id__C;
}

 
static inline xdc_Bool xdc_runtime_Main_Module_hasMask( void ) 
{
    return xdc_runtime_Main_Module__diagsMask__C != 0;
}

 
static inline xdc_Bits16 xdc_runtime_Main_Module_getMask( void ) 
{
    return xdc_runtime_Main_Module__diagsMask__C != 0 ? *xdc_runtime_Main_Module__diagsMask__C : 0;
}

 
static inline void xdc_runtime_Main_Module_setMask( xdc_Bits16 mask ) 
{
    if (xdc_runtime_Main_Module__diagsMask__C != 0) *xdc_runtime_Main_Module__diagsMask__C = mask;
}




 










 

# 222 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Main.h"



 

# 248 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Main.h"


 

# 14 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Error__prologue.h"



 
typedef xdc_Bits32 xdc_runtime_Error_Id;


















 








 

# 55 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Error.h"


# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IModule.h"





 













 




 

# 104 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IModule.h"




 

# 121 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IModule.h"


 

# 58 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Error.h"
# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"





 















 




 

# 347 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"




 

# 362 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"



 

# 423 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"


 

# 59 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Error.h"




 

 
enum xdc_runtime_Error_Policy {
    xdc_runtime_Error_TERMINATE,
    xdc_runtime_Error_UNWIND
};
typedef enum xdc_runtime_Error_Policy xdc_runtime_Error_Policy;

 

 
typedef void (*xdc_runtime_Error_HookFxn)(xdc_runtime_Error_Block*);

 


 
typedef xdc_IArg __T1_xdc_runtime_Error_Data__arg;
typedef xdc_IArg __ARRAY1_xdc_runtime_Error_Data__arg[2];
typedef __ARRAY1_xdc_runtime_Error_Data__arg __TA_xdc_runtime_Error_Data__arg;
struct xdc_runtime_Error_Data {
    __TA_xdc_runtime_Error_Data__arg arg;
};

 
typedef xdc_IArg __T1_xdc_runtime_Error_Block__xtra;
typedef xdc_IArg __ARRAY1_xdc_runtime_Error_Block__xtra[4];
typedef __ARRAY1_xdc_runtime_Error_Block__xtra __TA_xdc_runtime_Error_Block__xtra;
struct xdc_runtime_Error_Block {
    xdc_UInt16 unused;
    xdc_runtime_Error_Data data;
    xdc_runtime_Error_Id id;
    xdc_String msg;
    xdc_runtime_Types_Site site;
    __TA_xdc_runtime_Error_Block__xtra xtra;
};

 
typedef void (*xdc_runtime_Error_PolicyFxn)(xdc_runtime_Error_Block*, xdc_runtime_Types_ModuleId, xdc_CString, xdc_Int, xdc_runtime_Error_Id, xdc_IArg, xdc_IArg);




 




 

 
typedef xdc_Bits32 CT__xdc_runtime_Error_Module__diagsEnabled;
extern  const CT__xdc_runtime_Error_Module__diagsEnabled xdc_runtime_Error_Module__diagsEnabled__C;

 
typedef xdc_Bits32 CT__xdc_runtime_Error_Module__diagsIncluded;
extern  const CT__xdc_runtime_Error_Module__diagsIncluded xdc_runtime_Error_Module__diagsIncluded__C;

 
typedef xdc_Bits16 *CT__xdc_runtime_Error_Module__diagsMask;
extern  const CT__xdc_runtime_Error_Module__diagsMask xdc_runtime_Error_Module__diagsMask__C;

 
typedef xdc_Ptr CT__xdc_runtime_Error_Module__gateObj;
extern  const CT__xdc_runtime_Error_Module__gateObj xdc_runtime_Error_Module__gateObj__C;

 
typedef xdc_Ptr CT__xdc_runtime_Error_Module__gatePrms;
extern  const CT__xdc_runtime_Error_Module__gatePrms xdc_runtime_Error_Module__gatePrms__C;

 
typedef xdc_runtime_Types_ModuleId CT__xdc_runtime_Error_Module__id;
extern  const CT__xdc_runtime_Error_Module__id xdc_runtime_Error_Module__id__C;

 
typedef xdc_Bool CT__xdc_runtime_Error_Module__loggerDefined;
extern  const CT__xdc_runtime_Error_Module__loggerDefined xdc_runtime_Error_Module__loggerDefined__C;

 
typedef xdc_Ptr CT__xdc_runtime_Error_Module__loggerObj;
extern  const CT__xdc_runtime_Error_Module__loggerObj xdc_runtime_Error_Module__loggerObj__C;

 
typedef xdc_runtime_Types_LoggerFxn0 CT__xdc_runtime_Error_Module__loggerFxn0;
extern  const CT__xdc_runtime_Error_Module__loggerFxn0 xdc_runtime_Error_Module__loggerFxn0__C;

 
typedef xdc_runtime_Types_LoggerFxn1 CT__xdc_runtime_Error_Module__loggerFxn1;
extern  const CT__xdc_runtime_Error_Module__loggerFxn1 xdc_runtime_Error_Module__loggerFxn1__C;

 
typedef xdc_runtime_Types_LoggerFxn2 CT__xdc_runtime_Error_Module__loggerFxn2;
extern  const CT__xdc_runtime_Error_Module__loggerFxn2 xdc_runtime_Error_Module__loggerFxn2__C;

 
typedef xdc_runtime_Types_LoggerFxn4 CT__xdc_runtime_Error_Module__loggerFxn4;
extern  const CT__xdc_runtime_Error_Module__loggerFxn4 xdc_runtime_Error_Module__loggerFxn4__C;

 
typedef xdc_runtime_Types_LoggerFxn8 CT__xdc_runtime_Error_Module__loggerFxn8;
extern  const CT__xdc_runtime_Error_Module__loggerFxn8 xdc_runtime_Error_Module__loggerFxn8__C;

 
typedef xdc_Bool (*CT__xdc_runtime_Error_Module__startupDoneFxn)(void);
extern  const CT__xdc_runtime_Error_Module__startupDoneFxn xdc_runtime_Error_Module__startupDoneFxn__C;

 
typedef xdc_Int CT__xdc_runtime_Error_Object__count;
extern  const CT__xdc_runtime_Error_Object__count xdc_runtime_Error_Object__count__C;

 
typedef xdc_runtime_IHeap_Handle CT__xdc_runtime_Error_Object__heap;
extern  const CT__xdc_runtime_Error_Object__heap xdc_runtime_Error_Object__heap__C;

 
typedef xdc_SizeT CT__xdc_runtime_Error_Object__sizeof;
extern  const CT__xdc_runtime_Error_Object__sizeof xdc_runtime_Error_Object__sizeof__C;

 
typedef xdc_Ptr CT__xdc_runtime_Error_Object__table;
extern  const CT__xdc_runtime_Error_Object__table xdc_runtime_Error_Object__table__C;

 

typedef xdc_runtime_Error_PolicyFxn CT__xdc_runtime_Error_policyFxn;
extern  const CT__xdc_runtime_Error_policyFxn xdc_runtime_Error_policyFxn__C;

 

typedef xdc_runtime_Error_Id CT__xdc_runtime_Error_E_generic;
extern  const CT__xdc_runtime_Error_E_generic xdc_runtime_Error_E_generic__C;

 

typedef xdc_runtime_Error_Id CT__xdc_runtime_Error_E_memory;
extern  const CT__xdc_runtime_Error_E_memory xdc_runtime_Error_E_memory__C;

 

typedef xdc_runtime_Error_Id CT__xdc_runtime_Error_E_msgCode;
extern  const CT__xdc_runtime_Error_E_msgCode xdc_runtime_Error_E_msgCode__C;

 

typedef xdc_runtime_Error_Policy CT__xdc_runtime_Error_policy;
extern  const CT__xdc_runtime_Error_policy xdc_runtime_Error_policy__C;

 

typedef xdc_runtime_Error_HookFxn CT__xdc_runtime_Error_raiseHook;
extern  const CT__xdc_runtime_Error_raiseHook xdc_runtime_Error_raiseHook__C;

 




typedef xdc_UInt16 CT__xdc_runtime_Error_maxDepth;
extern  const CT__xdc_runtime_Error_maxDepth xdc_runtime_Error_maxDepth__C;





 

 


 

extern xdc_Bool xdc_runtime_Error_Module__startupDone__S( void );

 


extern xdc_Bool xdc_runtime_Error_check__E( xdc_runtime_Error_Block *eb );

 


extern xdc_runtime_Error_Data *xdc_runtime_Error_getData__E( xdc_runtime_Error_Block *eb );

 


extern xdc_UInt16 xdc_runtime_Error_getCode__E( xdc_runtime_Error_Block *eb );

 


extern xdc_runtime_Error_Id xdc_runtime_Error_getId__E( xdc_runtime_Error_Block *eb );

 


extern xdc_String xdc_runtime_Error_getMsg__E( xdc_runtime_Error_Block *eb );

 


extern xdc_runtime_Types_Site *xdc_runtime_Error_getSite__E( xdc_runtime_Error_Block *eb );

 


extern void xdc_runtime_Error_init__E( xdc_runtime_Error_Block *eb );

 


extern void xdc_runtime_Error_print__E( xdc_runtime_Error_Block *eb );

 


extern void xdc_runtime_Error_policyDefault__E( xdc_runtime_Error_Block *eb, xdc_runtime_Types_ModuleId mod, xdc_CString file, xdc_Int line, xdc_runtime_Error_Id id, xdc_IArg arg1, xdc_IArg arg2 );

 


extern void xdc_runtime_Error_policySpin__E( xdc_runtime_Error_Block *eb, xdc_runtime_Types_ModuleId mod, xdc_CString file, xdc_Int line, xdc_runtime_Error_Id id, xdc_IArg arg1, xdc_IArg arg2 );

 


extern void xdc_runtime_Error_raiseX__E( xdc_runtime_Error_Block *eb, xdc_runtime_Types_ModuleId mod, xdc_CString file, xdc_Int line, xdc_runtime_Error_Id id, xdc_IArg arg1, xdc_IArg arg2 );

 


extern void xdc_runtime_Error_setX__E( xdc_runtime_Error_Block *eb, xdc_runtime_Types_ModuleId mod, xdc_CString file, xdc_Int line, xdc_runtime_Error_Id id, xdc_IArg arg1, xdc_IArg arg2 );




 

 


 


 


 
static inline CT__xdc_runtime_Error_Module__id xdc_runtime_Error_Module_id( void ) 
{
    return xdc_runtime_Error_Module__id__C;
}

 
static inline xdc_Bool xdc_runtime_Error_Module_hasMask( void ) 
{
    return xdc_runtime_Error_Module__diagsMask__C != 0;
}

 
static inline xdc_Bits16 xdc_runtime_Error_Module_getMask( void ) 
{
    return xdc_runtime_Error_Module__diagsMask__C != 0 ? *xdc_runtime_Error_Module__diagsMask__C : 0;
}

 
static inline void xdc_runtime_Error_Module_setMask( xdc_Bits16 mask ) 
{
    if (xdc_runtime_Error_Module__diagsMask__C != 0) *xdc_runtime_Error_Module__diagsMask__C = mask;
}




 

# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Error__epilogue.h"











 








 






 





 




 

# 341 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Error.h"










 

# 369 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Error.h"




 

# 425 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Error.h"


 

# 58 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IHeap.h"
# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Memory.h"





 















 




 




















 



# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"





 















 




 

# 347 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"




 

# 362 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"



 

# 423 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"


 

# 54 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Memory.h"


# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IModule.h"





 













 




 

# 104 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IModule.h"




 

# 121 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IModule.h"


 

# 57 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Memory.h"
# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IHeap.h"





 














 




 

# 202 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IHeap.h"




 

# 238 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IHeap.h"


 

# 58 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Memory.h"
# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Error.h"





 















 




 

# 347 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Error.h"




 

# 369 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Error.h"




 

# 425 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Error.h"


 

# 59 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Memory.h"
# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/package/Memory_HeapProxy.h"





 
















 




 




















 



# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"





 















 




 

# 347 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"




 

# 362 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"



 

# 423 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Types.h"


 

# 55 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/package/Memory_HeapProxy.h"
# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IInstance.h"





 














 




 

# 132 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IInstance.h"




 

# 155 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IInstance.h"


 

# 56 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/package/Memory_HeapProxy.h"


# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IHeap.h"





 














 




 

# 202 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IHeap.h"




 

# 238 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IHeap.h"


 

# 59 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/package/Memory_HeapProxy.h"




 




 

 
typedef xdc_Bits32 CT__xdc_runtime_Memory_HeapProxy_Module__diagsEnabled;
extern  const CT__xdc_runtime_Memory_HeapProxy_Module__diagsEnabled xdc_runtime_Memory_HeapProxy_Module__diagsEnabled__C;

 
typedef xdc_Bits32 CT__xdc_runtime_Memory_HeapProxy_Module__diagsIncluded;
extern  const CT__xdc_runtime_Memory_HeapProxy_Module__diagsIncluded xdc_runtime_Memory_HeapProxy_Module__diagsIncluded__C;

 
typedef xdc_Bits16 *CT__xdc_runtime_Memory_HeapProxy_Module__diagsMask;
extern  const CT__xdc_runtime_Memory_HeapProxy_Module__diagsMask xdc_runtime_Memory_HeapProxy_Module__diagsMask__C;

 
typedef xdc_Ptr CT__xdc_runtime_Memory_HeapProxy_Module__gateObj;
extern  const CT__xdc_runtime_Memory_HeapProxy_Module__gateObj xdc_runtime_Memory_HeapProxy_Module__gateObj__C;

 
typedef xdc_Ptr CT__xdc_runtime_Memory_HeapProxy_Module__gatePrms;
extern  const CT__xdc_runtime_Memory_HeapProxy_Module__gatePrms xdc_runtime_Memory_HeapProxy_Module__gatePrms__C;

 
typedef xdc_runtime_Types_ModuleId CT__xdc_runtime_Memory_HeapProxy_Module__id;
extern  const CT__xdc_runtime_Memory_HeapProxy_Module__id xdc_runtime_Memory_HeapProxy_Module__id__C;

 
typedef xdc_Bool CT__xdc_runtime_Memory_HeapProxy_Module__loggerDefined;
extern  const CT__xdc_runtime_Memory_HeapProxy_Module__loggerDefined xdc_runtime_Memory_HeapProxy_Module__loggerDefined__C;

 
typedef xdc_Ptr CT__xdc_runtime_Memory_HeapProxy_Module__loggerObj;
extern  const CT__xdc_runtime_Memory_HeapProxy_Module__loggerObj xdc_runtime_Memory_HeapProxy_Module__loggerObj__C;

 
typedef xdc_runtime_Types_LoggerFxn0 CT__xdc_runtime_Memory_HeapProxy_Module__loggerFxn0;
extern  const CT__xdc_runtime_Memory_HeapProxy_Module__loggerFxn0 xdc_runtime_Memory_HeapProxy_Module__loggerFxn0__C;

 
typedef xdc_runtime_Types_LoggerFxn1 CT__xdc_runtime_Memory_HeapProxy_Module__loggerFxn1;
extern  const CT__xdc_runtime_Memory_HeapProxy_Module__loggerFxn1 xdc_runtime_Memory_HeapProxy_Module__loggerFxn1__C;

 
typedef xdc_runtime_Types_LoggerFxn2 CT__xdc_runtime_Memory_HeapProxy_Module__loggerFxn2;
extern  const CT__xdc_runtime_Memory_HeapProxy_Module__loggerFxn2 xdc_runtime_Memory_HeapProxy_Module__loggerFxn2__C;

 
typedef xdc_runtime_Types_LoggerFxn4 CT__xdc_runtime_Memory_HeapProxy_Module__loggerFxn4;
extern  const CT__xdc_runtime_Memory_HeapProxy_Module__loggerFxn4 xdc_runtime_Memory_HeapProxy_Module__loggerFxn4__C;

 
typedef xdc_runtime_Types_LoggerFxn8 CT__xdc_runtime_Memory_HeapProxy_Module__loggerFxn8;
extern  const CT__xdc_runtime_Memory_HeapProxy_Module__loggerFxn8 xdc_runtime_Memory_HeapProxy_Module__loggerFxn8__C;

 
typedef xdc_Bool (*CT__xdc_runtime_Memory_HeapProxy_Module__startupDoneFxn)(void);
extern  const CT__xdc_runtime_Memory_HeapProxy_Module__startupDoneFxn xdc_runtime_Memory_HeapProxy_Module__startupDoneFxn__C;

 
typedef xdc_Int CT__xdc_runtime_Memory_HeapProxy_Object__count;
extern  const CT__xdc_runtime_Memory_HeapProxy_Object__count xdc_runtime_Memory_HeapProxy_Object__count__C;

 
typedef xdc_runtime_IHeap_Handle CT__xdc_runtime_Memory_HeapProxy_Object__heap;
extern  const CT__xdc_runtime_Memory_HeapProxy_Object__heap xdc_runtime_Memory_HeapProxy_Object__heap__C;

 
typedef xdc_SizeT CT__xdc_runtime_Memory_HeapProxy_Object__sizeof;
extern  const CT__xdc_runtime_Memory_HeapProxy_Object__sizeof xdc_runtime_Memory_HeapProxy_Object__sizeof__C;

 
typedef xdc_Ptr CT__xdc_runtime_Memory_HeapProxy_Object__table;
extern  const CT__xdc_runtime_Memory_HeapProxy_Object__table xdc_runtime_Memory_HeapProxy_Object__table__C;




 

 
struct xdc_runtime_Memory_HeapProxy_Params {
    size_t __size;
    const void *__self;
    void *__fxns;
    xdc_runtime_IInstance_Params *instance;
    xdc_runtime_IInstance_Params __iprms;
};

 
struct xdc_runtime_Memory_HeapProxy_Struct {
    const xdc_runtime_Memory_HeapProxy_Fxns__ *__fxns;
    xdc_runtime_Types_CordAddr __name;
};




 

 
struct xdc_runtime_Memory_HeapProxy_Fxns__ {
    xdc_runtime_Types_Base* __base;
    const xdc_runtime_Types_SysFxns2 *__sysp;
    xdc_Ptr (*alloc)(xdc_runtime_Memory_HeapProxy_Handle, xdc_SizeT, xdc_SizeT, xdc_runtime_Error_Block*);
    void (*free)(xdc_runtime_Memory_HeapProxy_Handle, xdc_Ptr, xdc_SizeT);
    xdc_Bool (*isBlocking)(xdc_runtime_Memory_HeapProxy_Handle);
    void (*getStats)(xdc_runtime_Memory_HeapProxy_Handle, xdc_runtime_Memory_Stats*);
    xdc_runtime_Types_SysFxns2 __sfxns;
};

 
extern const xdc_runtime_Memory_HeapProxy_Fxns__ xdc_runtime_Memory_HeapProxy_Module__FXNS__C;




 

 


 

extern xdc_runtime_Types_Label *xdc_runtime_Memory_HeapProxy_Handle__label__S( xdc_Ptr obj, xdc_runtime_Types_Label *lab );

 

extern xdc_Bool xdc_runtime_Memory_HeapProxy_Module__startupDone__S( void );

 

extern xdc_Ptr xdc_runtime_Memory_HeapProxy_Object__create__S( xdc_Ptr __oa, xdc_SizeT __osz, xdc_Ptr __aa, const xdc_UChar *__pa, xdc_SizeT __psz, xdc_runtime_Error_Block *__eb );

 

extern xdc_runtime_Memory_HeapProxy_Handle xdc_runtime_Memory_HeapProxy_create( const xdc_runtime_Memory_HeapProxy_Params *__prms, xdc_runtime_Error_Block *__eb );

 

extern void xdc_runtime_Memory_HeapProxy_Object__delete__S( xdc_Ptr instp );

 

extern void xdc_runtime_Memory_HeapProxy_delete(xdc_runtime_Memory_HeapProxy_Handle *instp);

 

extern void xdc_runtime_Memory_HeapProxy_Object__destruct__S( xdc_Ptr objp );

 

extern xdc_Ptr xdc_runtime_Memory_HeapProxy_Object__get__S( xdc_Ptr oarr, xdc_Int i );

 

extern xdc_Ptr xdc_runtime_Memory_HeapProxy_Object__first__S( void );

 

extern xdc_Ptr xdc_runtime_Memory_HeapProxy_Object__next__S( xdc_Ptr obj );

 

extern void xdc_runtime_Memory_HeapProxy_Params__init__S( xdc_Ptr dst, const void *src, xdc_SizeT psz, xdc_SizeT isz );

 

extern xdc_Bool xdc_runtime_Memory_HeapProxy_Proxy__abstract__S( void );

 

extern xdc_Ptr xdc_runtime_Memory_HeapProxy_Proxy__delegate__S( void );

 


extern xdc_Ptr xdc_runtime_Memory_HeapProxy_alloc__E( xdc_runtime_Memory_HeapProxy_Handle __inst, xdc_SizeT size, xdc_SizeT align, xdc_runtime_Error_Block *eb );

 


extern void xdc_runtime_Memory_HeapProxy_free__E( xdc_runtime_Memory_HeapProxy_Handle __inst, xdc_Ptr block, xdc_SizeT size );

 


extern xdc_Bool xdc_runtime_Memory_HeapProxy_isBlocking__E( xdc_runtime_Memory_HeapProxy_Handle __inst );

 


extern void xdc_runtime_Memory_HeapProxy_getStats__E( xdc_runtime_Memory_HeapProxy_Handle __inst, xdc_runtime_Memory_Stats *stats );




 

 
static inline xdc_runtime_IHeap_Module xdc_runtime_Memory_HeapProxy_Module_upCast( void )
{
    return (xdc_runtime_IHeap_Module)xdc_runtime_Memory_HeapProxy_Proxy__delegate__S();
}

 


 
static inline xdc_runtime_IHeap_Handle xdc_runtime_Memory_HeapProxy_Handle_upCast( xdc_runtime_Memory_HeapProxy_Handle i )
{
    return (xdc_runtime_IHeap_Handle)i;
}

 


 
static inline xdc_runtime_Memory_HeapProxy_Handle xdc_runtime_Memory_HeapProxy_Handle_downCast( xdc_runtime_IHeap_Handle i )
{
    xdc_runtime_IHeap_Handle i2 = (xdc_runtime_IHeap_Handle)i;
if (xdc_runtime_Memory_HeapProxy_Proxy__abstract__S()) return (xdc_runtime_Memory_HeapProxy_Handle)i;
    return (void*)i2->__fxns == (void*)xdc_runtime_Memory_HeapProxy_Proxy__delegate__S() ? (xdc_runtime_Memory_HeapProxy_Handle)i : 0;
}

 





 

 


 


 


 
static inline CT__xdc_runtime_Memory_HeapProxy_Module__id xdc_runtime_Memory_HeapProxy_Module_id( void ) 
{
    return xdc_runtime_Memory_HeapProxy_Module__id__C;
}

 


 


 
static inline void xdc_runtime_Memory_HeapProxy_Params_init( xdc_runtime_Memory_HeapProxy_Params *prms ) 
{
    if (prms) {
        xdc_runtime_Memory_HeapProxy_Params__init__S(prms, 0, sizeof(xdc_runtime_Memory_HeapProxy_Params), sizeof(xdc_runtime_IInstance_Params));
    }
}

 
static inline void xdc_runtime_Memory_HeapProxy_Params_copy(xdc_runtime_Memory_HeapProxy_Params *dst, const xdc_runtime_Memory_HeapProxy_Params *src) 
{
    if (dst) {
        xdc_runtime_Memory_HeapProxy_Params__init__S(dst, (const void *)src, sizeof(xdc_runtime_Memory_HeapProxy_Params), sizeof(xdc_runtime_IInstance_Params));
    }
}




 










 

# 60 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Memory.h"




 

 


 
typedef xdc_UArg xdc_runtime_Memory_Size;

 
struct xdc_runtime_Memory_Stats {
    xdc_runtime_Memory_Size totalSize;
    xdc_runtime_Memory_Size totalFreeSize;
    xdc_runtime_Memory_Size largestFreeSize;
};




 




 

 
typedef xdc_Bits32 CT__xdc_runtime_Memory_Module__diagsEnabled;
extern  const CT__xdc_runtime_Memory_Module__diagsEnabled xdc_runtime_Memory_Module__diagsEnabled__C;

 
typedef xdc_Bits32 CT__xdc_runtime_Memory_Module__diagsIncluded;
extern  const CT__xdc_runtime_Memory_Module__diagsIncluded xdc_runtime_Memory_Module__diagsIncluded__C;

 
typedef xdc_Bits16 *CT__xdc_runtime_Memory_Module__diagsMask;
extern  const CT__xdc_runtime_Memory_Module__diagsMask xdc_runtime_Memory_Module__diagsMask__C;

 
typedef xdc_Ptr CT__xdc_runtime_Memory_Module__gateObj;
extern  const CT__xdc_runtime_Memory_Module__gateObj xdc_runtime_Memory_Module__gateObj__C;

 
typedef xdc_Ptr CT__xdc_runtime_Memory_Module__gatePrms;
extern  const CT__xdc_runtime_Memory_Module__gatePrms xdc_runtime_Memory_Module__gatePrms__C;

 
typedef xdc_runtime_Types_ModuleId CT__xdc_runtime_Memory_Module__id;
extern  const CT__xdc_runtime_Memory_Module__id xdc_runtime_Memory_Module__id__C;

 
typedef xdc_Bool CT__xdc_runtime_Memory_Module__loggerDefined;
extern  const CT__xdc_runtime_Memory_Module__loggerDefined xdc_runtime_Memory_Module__loggerDefined__C;

 
typedef xdc_Ptr CT__xdc_runtime_Memory_Module__loggerObj;
extern  const CT__xdc_runtime_Memory_Module__loggerObj xdc_runtime_Memory_Module__loggerObj__C;

 
typedef xdc_runtime_Types_LoggerFxn0 CT__xdc_runtime_Memory_Module__loggerFxn0;
extern  const CT__xdc_runtime_Memory_Module__loggerFxn0 xdc_runtime_Memory_Module__loggerFxn0__C;

 
typedef xdc_runtime_Types_LoggerFxn1 CT__xdc_runtime_Memory_Module__loggerFxn1;
extern  const CT__xdc_runtime_Memory_Module__loggerFxn1 xdc_runtime_Memory_Module__loggerFxn1__C;

 
typedef xdc_runtime_Types_LoggerFxn2 CT__xdc_runtime_Memory_Module__loggerFxn2;
extern  const CT__xdc_runtime_Memory_Module__loggerFxn2 xdc_runtime_Memory_Module__loggerFxn2__C;

 
typedef xdc_runtime_Types_LoggerFxn4 CT__xdc_runtime_Memory_Module__loggerFxn4;
extern  const CT__xdc_runtime_Memory_Module__loggerFxn4 xdc_runtime_Memory_Module__loggerFxn4__C;

 
typedef xdc_runtime_Types_LoggerFxn8 CT__xdc_runtime_Memory_Module__loggerFxn8;
extern  const CT__xdc_runtime_Memory_Module__loggerFxn8 xdc_runtime_Memory_Module__loggerFxn8__C;

 
typedef xdc_Bool (*CT__xdc_runtime_Memory_Module__startupDoneFxn)(void);
extern  const CT__xdc_runtime_Memory_Module__startupDoneFxn xdc_runtime_Memory_Module__startupDoneFxn__C;

 
typedef xdc_Int CT__xdc_runtime_Memory_Object__count;
extern  const CT__xdc_runtime_Memory_Object__count xdc_runtime_Memory_Object__count__C;

 
typedef xdc_runtime_IHeap_Handle CT__xdc_runtime_Memory_Object__heap;
extern  const CT__xdc_runtime_Memory_Object__heap xdc_runtime_Memory_Object__heap__C;

 
typedef xdc_SizeT CT__xdc_runtime_Memory_Object__sizeof;
extern  const CT__xdc_runtime_Memory_Object__sizeof xdc_runtime_Memory_Object__sizeof__C;

 
typedef xdc_Ptr CT__xdc_runtime_Memory_Object__table;
extern  const CT__xdc_runtime_Memory_Object__table xdc_runtime_Memory_Object__table__C;

 

typedef xdc_runtime_IHeap_Handle CT__xdc_runtime_Memory_defaultHeapInstance;
extern  const CT__xdc_runtime_Memory_defaultHeapInstance xdc_runtime_Memory_defaultHeapInstance__C;




 

 


 

extern xdc_Bool xdc_runtime_Memory_Module__startupDone__S( void );

 


extern xdc_Ptr xdc_runtime_Memory_alloc__E( xdc_runtime_IHeap_Handle heap, xdc_SizeT size, xdc_SizeT align, xdc_runtime_Error_Block *eb );

 


extern xdc_Ptr xdc_runtime_Memory_calloc__E( xdc_runtime_IHeap_Handle heap, xdc_SizeT size, xdc_SizeT align, xdc_runtime_Error_Block *eb );

 


extern void xdc_runtime_Memory_free__E( xdc_runtime_IHeap_Handle heap, xdc_Ptr block, xdc_SizeT size );

 


extern void xdc_runtime_Memory_getStats__E( xdc_runtime_IHeap_Handle heap, xdc_runtime_Memory_Stats *stats );

 


extern xdc_Bool xdc_runtime_Memory_query__E( xdc_runtime_IHeap_Handle heap, xdc_Int qual );

 


extern xdc_SizeT xdc_runtime_Memory_getMaxDefaultTypeAlign__E( void );

 


extern xdc_Ptr xdc_runtime_Memory_valloc__E( xdc_runtime_IHeap_Handle heap, xdc_SizeT size, xdc_SizeT align, xdc_Char value, xdc_runtime_Error_Block *eb );




 

 


 


 


 
static inline CT__xdc_runtime_Memory_Module__id xdc_runtime_Memory_Module_id( void ) 
{
    return xdc_runtime_Memory_Module__id__C;
}

 
static inline xdc_Bool xdc_runtime_Memory_Module_hasMask( void ) 
{
    return xdc_runtime_Memory_Module__diagsMask__C != 0;
}

 
static inline xdc_Bits16 xdc_runtime_Memory_Module_getMask( void ) 
{
    return xdc_runtime_Memory_Module__diagsMask__C != 0 ? *xdc_runtime_Memory_Module__diagsMask__C : 0;
}

 
static inline void xdc_runtime_Memory_Module_setMask( xdc_Bits16 mask ) 
{
    if (xdc_runtime_Memory_Module__diagsMask__C != 0) *xdc_runtime_Memory_Module__diagsMask__C = mask;
}




 










 

# 283 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Memory.h"




 

# 322 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Memory.h"


 

# 59 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IHeap.h"




 




 

 
struct xdc_runtime_IHeap_Params {
    size_t __size;
    const void *__self;
    void *__fxns;
    xdc_runtime_IInstance_Params *instance;
};




 

 
struct xdc_runtime_IHeap_Fxns__ {
    xdc_runtime_Types_Base* __base;
    const xdc_runtime_Types_SysFxns2 *__sysp;
    xdc_Ptr (*alloc)(void*, xdc_SizeT, xdc_SizeT, xdc_runtime_Error_Block*);
    void (*free)(void*, xdc_Ptr, xdc_SizeT);
    xdc_Bool (*isBlocking)(void*);
    void (*getStats)(void*, xdc_runtime_Memory_Stats*);
    xdc_runtime_Types_SysFxns2 __sfxns;
};

 
extern const xdc_runtime_Types_Base xdc_runtime_IHeap_Interface__BASE__C;




 

 

extern xdc_runtime_IHeap_Handle xdc_runtime_IHeap_create(xdc_runtime_IHeap_Module, const xdc_runtime_IHeap_Params *, xdc_runtime_Error_Block *__eb);

 

extern void xdc_runtime_IHeap_delete(xdc_runtime_IHeap_Handle *);

 
static inline xdc_runtime_IHeap_Module xdc_runtime_IHeap_Handle_to_Module( xdc_runtime_IHeap_Handle inst )
{
    return inst->__fxns;
}

 
static inline xdc_runtime_Types_Label *xdc_runtime_IHeap_Handle_label( xdc_runtime_IHeap_Handle inst, xdc_runtime_Types_Label *lab )
{
    return inst->__fxns->__sysp->__label(inst, lab);
}

 
static inline xdc_runtime_Types_ModuleId xdc_runtime_IHeap_Module_id( xdc_runtime_IHeap_Module mod )
{
    return mod->__sysp->__mid;
}

 
static inline xdc_Ptr xdc_runtime_IHeap_alloc( xdc_runtime_IHeap_Handle __inst, xdc_SizeT size, xdc_SizeT align, xdc_runtime_Error_Block *eb )
{
    return __inst->__fxns->alloc((void*)__inst, size, align, eb);
}

 
static inline void xdc_runtime_IHeap_free( xdc_runtime_IHeap_Handle __inst, xdc_Ptr block, xdc_SizeT size )
{
    __inst->__fxns->free((void*)__inst, block, size);
}

 
static inline xdc_Bool xdc_runtime_IHeap_isBlocking( xdc_runtime_IHeap_Handle __inst )
{
    return __inst->__fxns->isBlocking((void*)__inst);
}

 
static inline void xdc_runtime_IHeap_getStats( xdc_runtime_IHeap_Handle __inst, xdc_runtime_Memory_Stats *stats )
{
    __inst->__fxns->getStats((void*)__inst, stats);
}




 






 

 
typedef xdc_Ptr (*xdc_runtime_IHeap_alloc_FxnT)(void *, xdc_SizeT, xdc_SizeT, xdc_runtime_Error_Block*);
static inline xdc_runtime_IHeap_alloc_FxnT xdc_runtime_IHeap_alloc_fxnP( xdc_runtime_IHeap_Handle __inst )
{
    return (xdc_runtime_IHeap_alloc_FxnT)__inst->__fxns->alloc;
}

 
typedef void (*xdc_runtime_IHeap_free_FxnT)(void *, xdc_Ptr, xdc_SizeT);
static inline xdc_runtime_IHeap_free_FxnT xdc_runtime_IHeap_free_fxnP( xdc_runtime_IHeap_Handle __inst )
{
    return (xdc_runtime_IHeap_free_FxnT)__inst->__fxns->free;
}

 
typedef xdc_Bool (*xdc_runtime_IHeap_isBlocking_FxnT)(void *);
static inline xdc_runtime_IHeap_isBlocking_FxnT xdc_runtime_IHeap_isBlocking_fxnP( xdc_runtime_IHeap_Handle __inst )
{
    return (xdc_runtime_IHeap_isBlocking_FxnT)__inst->__fxns->isBlocking;
}

 
typedef void (*xdc_runtime_IHeap_getStats_FxnT)(void *, xdc_runtime_Memory_Stats*);
static inline xdc_runtime_IHeap_getStats_FxnT xdc_runtime_IHeap_getStats_fxnP( xdc_runtime_IHeap_Handle __inst )
{
    return (xdc_runtime_IHeap_getStats_FxnT)__inst->__fxns->getStats;
}




 










 

# 238 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IHeap.h"


 

# 56 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IModule.h"
# 1 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Error.h"





 















 




 

# 347 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Error.h"




 

# 369 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Error.h"




 

# 425 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/Error.h"


 

# 57 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IModule.h"




 




 

 
struct xdc_runtime_IModule_Fxns__ {
    xdc_runtime_Types_Base* __base;
    const xdc_runtime_Types_SysFxns2 *__sysp;
    xdc_runtime_Types_SysFxns2 __sfxns;
};

 
extern const xdc_runtime_Types_Base xdc_runtime_IModule_Interface__BASE__C;




 

 
static inline xdc_runtime_Types_ModuleId xdc_runtime_IModule_Module_id( xdc_runtime_IModule_Module mod )
{
    return mod->__sysp->__mid;
}




 




 










 

# 121 "C:/ti/tirex-content/xdctools_3_31_01_33_core/packages/xdc/runtime/IModule.h"


 

# 57 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/bios_6_42_00_08/packages/ti/sysbios/family/arm/cc26xx/Boot.h"




 




 




 

 
typedef xdc_Bits32 CT__ti_sysbios_family_arm_cc26xx_Boot_Module__diagsEnabled;
extern  const CT__ti_sysbios_family_arm_cc26xx_Boot_Module__diagsEnabled ti_sysbios_family_arm_cc26xx_Boot_Module__diagsEnabled__C;

 
typedef xdc_Bits32 CT__ti_sysbios_family_arm_cc26xx_Boot_Module__diagsIncluded;
extern  const CT__ti_sysbios_family_arm_cc26xx_Boot_Module__diagsIncluded ti_sysbios_family_arm_cc26xx_Boot_Module__diagsIncluded__C;

 
typedef xdc_Bits16 *CT__ti_sysbios_family_arm_cc26xx_Boot_Module__diagsMask;
extern  const CT__ti_sysbios_family_arm_cc26xx_Boot_Module__diagsMask ti_sysbios_family_arm_cc26xx_Boot_Module__diagsMask__C;

 
typedef xdc_Ptr CT__ti_sysbios_family_arm_cc26xx_Boot_Module__gateObj;
extern  const CT__ti_sysbios_family_arm_cc26xx_Boot_Module__gateObj ti_sysbios_family_arm_cc26xx_Boot_Module__gateObj__C;

 
typedef xdc_Ptr CT__ti_sysbios_family_arm_cc26xx_Boot_Module__gatePrms;
extern  const CT__ti_sysbios_family_arm_cc26xx_Boot_Module__gatePrms ti_sysbios_family_arm_cc26xx_Boot_Module__gatePrms__C;

 
typedef xdc_runtime_Types_ModuleId CT__ti_sysbios_family_arm_cc26xx_Boot_Module__id;
extern  const CT__ti_sysbios_family_arm_cc26xx_Boot_Module__id ti_sysbios_family_arm_cc26xx_Boot_Module__id__C;

 
typedef xdc_Bool CT__ti_sysbios_family_arm_cc26xx_Boot_Module__loggerDefined;
extern  const CT__ti_sysbios_family_arm_cc26xx_Boot_Module__loggerDefined ti_sysbios_family_arm_cc26xx_Boot_Module__loggerDefined__C;

 
typedef xdc_Ptr CT__ti_sysbios_family_arm_cc26xx_Boot_Module__loggerObj;
extern  const CT__ti_sysbios_family_arm_cc26xx_Boot_Module__loggerObj ti_sysbios_family_arm_cc26xx_Boot_Module__loggerObj__C;

 
typedef xdc_runtime_Types_LoggerFxn0 CT__ti_sysbios_family_arm_cc26xx_Boot_Module__loggerFxn0;
extern  const CT__ti_sysbios_family_arm_cc26xx_Boot_Module__loggerFxn0 ti_sysbios_family_arm_cc26xx_Boot_Module__loggerFxn0__C;

 
typedef xdc_runtime_Types_LoggerFxn1 CT__ti_sysbios_family_arm_cc26xx_Boot_Module__loggerFxn1;
extern  const CT__ti_sysbios_family_arm_cc26xx_Boot_Module__loggerFxn1 ti_sysbios_family_arm_cc26xx_Boot_Module__loggerFxn1__C;

 
typedef xdc_runtime_Types_LoggerFxn2 CT__ti_sysbios_family_arm_cc26xx_Boot_Module__loggerFxn2;
extern  const CT__ti_sysbios_family_arm_cc26xx_Boot_Module__loggerFxn2 ti_sysbios_family_arm_cc26xx_Boot_Module__loggerFxn2__C;

 
typedef xdc_runtime_Types_LoggerFxn4 CT__ti_sysbios_family_arm_cc26xx_Boot_Module__loggerFxn4;
extern  const CT__ti_sysbios_family_arm_cc26xx_Boot_Module__loggerFxn4 ti_sysbios_family_arm_cc26xx_Boot_Module__loggerFxn4__C;

 
typedef xdc_runtime_Types_LoggerFxn8 CT__ti_sysbios_family_arm_cc26xx_Boot_Module__loggerFxn8;
extern  const CT__ti_sysbios_family_arm_cc26xx_Boot_Module__loggerFxn8 ti_sysbios_family_arm_cc26xx_Boot_Module__loggerFxn8__C;

 
typedef xdc_Bool (*CT__ti_sysbios_family_arm_cc26xx_Boot_Module__startupDoneFxn)(void);
extern  const CT__ti_sysbios_family_arm_cc26xx_Boot_Module__startupDoneFxn ti_sysbios_family_arm_cc26xx_Boot_Module__startupDoneFxn__C;

 
typedef xdc_Int CT__ti_sysbios_family_arm_cc26xx_Boot_Object__count;
extern  const CT__ti_sysbios_family_arm_cc26xx_Boot_Object__count ti_sysbios_family_arm_cc26xx_Boot_Object__count__C;

 
typedef xdc_runtime_IHeap_Handle CT__ti_sysbios_family_arm_cc26xx_Boot_Object__heap;
extern  const CT__ti_sysbios_family_arm_cc26xx_Boot_Object__heap ti_sysbios_family_arm_cc26xx_Boot_Object__heap__C;

 
typedef xdc_SizeT CT__ti_sysbios_family_arm_cc26xx_Boot_Object__sizeof;
extern  const CT__ti_sysbios_family_arm_cc26xx_Boot_Object__sizeof ti_sysbios_family_arm_cc26xx_Boot_Object__sizeof__C;

 
typedef xdc_Ptr CT__ti_sysbios_family_arm_cc26xx_Boot_Object__table;
extern  const CT__ti_sysbios_family_arm_cc26xx_Boot_Object__table ti_sysbios_family_arm_cc26xx_Boot_Object__table__C;




 

 


 

extern xdc_Bool ti_sysbios_family_arm_cc26xx_Boot_Module__startupDone__S( void );

 


extern xdc_UInt32 ti_sysbios_family_arm_cc26xx_Boot_getBootReason__E( void );




 

 


 


 


 
static inline CT__ti_sysbios_family_arm_cc26xx_Boot_Module__id ti_sysbios_family_arm_cc26xx_Boot_Module_id( void ) 
{
    return ti_sysbios_family_arm_cc26xx_Boot_Module__id__C;
}

 
static inline xdc_Bool ti_sysbios_family_arm_cc26xx_Boot_Module_hasMask( void ) 
{
    return ti_sysbios_family_arm_cc26xx_Boot_Module__diagsMask__C != 0;
}

 
static inline xdc_Bits16 ti_sysbios_family_arm_cc26xx_Boot_Module_getMask( void ) 
{
    return ti_sysbios_family_arm_cc26xx_Boot_Module__diagsMask__C != 0 ? *ti_sysbios_family_arm_cc26xx_Boot_Module__diagsMask__C : 0;
}

 
static inline void ti_sysbios_family_arm_cc26xx_Boot_Module_setMask( xdc_Bits16 mask ) 
{
    if (ti_sysbios_family_arm_cc26xx_Boot_Module__diagsMask__C != 0) *ti_sysbios_family_arm_cc26xx_Boot_Module__diagsMask__C = mask;
}




 










 













 






 
# 246 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/bios_6_42_00_08/packages/ti/sysbios/family/arm/cc26xx/Boot.h"

# 16 "C:\\ti\\tirex-content\\tirtos_simplelink_2_13_00_06\\products\\bios_6_42_00_08\\packages\\ti\\sysbios\\family\\arm\\cc26xx\\package/internal/Boot.xdc.h"

# 23 "C:\\ti\\tirex-content\\tirtos_simplelink_2_13_00_06\\products\\bios_6_42_00_08\\packages\\ti\\sysbios\\family\\arm\\cc26xx\\package/internal/Boot.xdc.h"

 



 



 



 



 
# 77 "C:\\ti\\tirex-content\\tirtos_simplelink_2_13_00_06\\products\\bios_6_42_00_08\\packages\\ti\\sysbios\\family\\arm\\cc26xx\\package/internal/Boot.xdc.h"


# 39 "C:/ti/tirex-content/tirtos_simplelink_2_13_00_06/products/bios_6_42_00_08/packages/ti/sysbios/family/arm/cc26xx/Boot.c"

void Boot_trimDevice(void);
extern void trimDevice(void);



 
void ti_sysbios_family_arm_cc26xx_Boot_trimDevice(void)
{
    trimDevice();
}



 
UInt32 ti_sysbios_family_arm_cc26xx_Boot_getBootReason__E()
{
    return (NOROM_SysCtrlResetSourceGet());
}
